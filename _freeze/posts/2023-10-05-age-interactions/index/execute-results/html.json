{
  "hash": "d11ba9c2e50f9d39d6ae30b4373372fc",
  "result": {
    "markdown": "---\ntitle: \"Age interactions\"\nauthor: Gibran Hemani\ndate: \"2023-10-05\"\ncategories: [\"GxE\"]\n---\n\n\n## Background\n\nWe can infer the age-specific effect of trait-variant association in various ways. How do they relate? e.g.\n\n- Stratify individuals by age group and get the main effect\n- Fit age as an interaction term\n- 2-step linear model - get per-individual age slopes and intercepts, estimate genetic effects on slopes and parameters\n\nAge isn't a collider so stratifying shouldn't introduce problems. \n\nApproach - each individual has a growth curve with parameters that are genetically influenced. What happens when we age stratify using different methods?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(lme4)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: Matrix\n```\n:::\n\n```{.r .cell-code}\nset.seed(1234)\n```\n:::\n\n\nSimulate data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngrowth_curve2 <- function(x, phi1=20, phi2=-2.4, phi3=0.3) {\n    g <- phi1 / (1 + exp(-(phi2 + phi3 * x)))\n    g + rnorm(length(g), sd=g/(max(g)*10))\n}\n\nnid <- 50000\n\nbg1 <- 5/2\nbg2 <- 0.1/2\npg1 <- 0.3\npg2 <- 0.3\n\nbmi <- lapply(1:nid, function(i) {\n    tibble(\n        id=i,\n        g1 = rbinom(1, 2, pg1),\n        g2 = rbinom(1, 2, pg2),\n        age=sample(0:50, 20, replace=FALSE),\n        value=growth_curve2(age, g1 * bg1 + rnorm(1, mean=23, sd=5), -2.4, g2 * bg2 + rnorm(1, mean=0.3, sd=0.1))\n    ) %>% arrange(age)\n}) %>% bind_rows()\n\nstr(bmi)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [1,000,000 × 5] (S3: tbl_df/tbl/data.frame)\n $ id   : int [1:1000000] 1 1 1 1 1 1 1 1 1 1 ...\n $ g1   : int [1:1000000] 0 0 0 0 0 0 0 0 0 0 ...\n $ g2   : int [1:1000000] 1 1 1 1 1 1 1 1 1 1 ...\n $ age  : int [1:1000000] 3 4 5 8 13 14 15 20 21 25 ...\n $ value: num [1:1000000] 4.03 4.72 5.49 8.35 14.52 ...\n```\n:::\n:::\n\n\nExample of what simulated data looks like\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(bmi %>% filter(id < 11), aes(x=age, y=value)) +\ngeom_point(aes(colour=as.factor(id))) +\ngeom_smooth(aes(colour=as.factor(id)), se=FALSE)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nStratifying by age, and getting main effect in each stratum\n\n\n::: {.cell}\n\n```{.r .cell-code}\no <- lapply(unique(bmi$age), function(a) {\n  x <- subset(bmi, age == a) %>% slice_sample(n=1000)\n  print(dim(x))\n  r <- bind_rows(\n    summary(lm(value ~ g1, x))$coef %>% as_tibble() %>% mutate(g=1) %>% slice_tail(n=1),\n    summary(lm(value ~ g2, x))$coef %>% as_tibble() %>% mutate(g=2) %>% slice_tail(n=1)\n  )\n  names(r) <- c(\"beta\", \"se\", \"tval\", \"pval\", \"g\")\n  r$age <- a\n  return(r)\n}) %>% bind_rows()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n[1] 1000    5\n```\n:::\n\n```{.r .cell-code}\no\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 102 × 6\n    beta     se  tval     pval     g   age\n   <dbl>  <dbl> <dbl>    <dbl> <dbl> <int>\n 1 0.578 0.0753  7.68 3.88e-14     1     3\n 2 0.653 0.0750  8.71 1.28e-17     2     3\n 3 0.481 0.114   4.21 2.82e- 5     1     4\n 4 1.08  0.117   9.17 2.57e-19     2     4\n 5 1.13  0.164   6.91 8.44e-12     1     5\n 6 1.46  0.163   8.92 2.25e-18     2     5\n 7 1.59  0.257   6.17 9.71e-10     1     8\n 8 1.67  0.250   6.67 4.32e-11     2     8\n 9 2.52  0.286   8.81 5.51e-18     1    13\n10 1.40  0.297   4.71 2.85e- 6     2    13\n# ℹ 92 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(o, aes(y=beta, x= age)) +\n  geom_point(aes(colour=g))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nMakes sense because g1 influences the asymptote, and g2 influences the rate of growth.\n\nInteraction with main effect - does it give the same thing?\n\n\n::: {.cell}\n\n```{.r .cell-code}\noi1 <- bmi %>% group_by(id) %>%\n  slice_sample(n=1) %>%\n  {summary(lm(value ~ g1 * as.factor(age), .))$coef}\noi2 <- bmi %>% group_by(id) %>%\n  slice_sample(n=1) %>%\n  {summary(lm(value ~ g2 * as.factor(age), .))$coef}\noi1 <- bind_cols(p = rownames(oi1), oi1) %>% as_tibble %>% filter(grepl(\"g1:\", p)) %>% mutate(age=gsub(\"g1\\\\:as.factor\\\\(age\\\\)\", \"\", p) %>% as.numeric(), g=1)\noi2 <- bind_cols(p = rownames(oi2), oi2) %>% as_tibble %>% filter(grepl(\"g2:\", p)) %>% mutate(age=gsub(\"g2\\\\:as.factor\\\\(age\\\\)\", \"\", p) %>% as.numeric(), g=2)\n\nggplot(bind_rows(oi1, oi2), aes(y=Estimate, x=age)) +\n  geom_point(aes(colour=g))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nLinear model for each individual\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp <- bmi %>% filter(id %in% 1:1000)\na <- lmer(value ~ age + (1+age|id), data=temp)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, :\nModel failed to converge with max|grad| = 0.0579551 (tol = 0.002, component 1)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : Model is nearly unidentifiable: very large eigenvalue\n - Rescale variables?\n```\n:::\n\n```{.r .cell-code}\nb <- ranef(a)\nhead(b$id)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  (Intercept)          age\n1 -3.11384947  0.164278524\n2 -4.39460900  0.033832734\n3  4.75739472 -0.012807851\n4 11.70591067  0.013564999\n5 -0.06871647 -0.050490788\n6  5.65167436 -0.005632972\n```\n:::\n\n```{.r .cell-code}\nrbind(\n    summary(lm(b$id[,1] ~ temp$g1[!duplicated(temp$id)]))$coef[2,],\n    summary(lm(b$id[,2] ~ temp$g1[!duplicated(temp$id)]))$coef[2,],\n    summary(lm(b$id[,1] ~ temp$g2[!duplicated(temp$id)]))$coef[2,],\n    summary(lm(b$id[,2] ~ temp$g2[!duplicated(temp$id)]))$coef[2,]\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        Estimate  Std. Error   t value     Pr(>|t|)\n[1,]  1.05784708 0.194558484  5.437168 6.807184e-08\n[2,]  0.02622162 0.004303497  6.093097 1.579452e-09\n[3,]  1.30851566 0.195321406  6.699295 3.493596e-11\n[4,] -0.02265172 0.004374294 -5.178370 2.706779e-07\n```\n:::\n:::\n\n\n### Summary\n\n- Stratifying by age gives same result as fitting age as an interaction - provided that interaction includes main effects for snp and age\n- Linear model still picks things up\n\n\n## Experiment - interactions with a collider\n\nIf there is a binary variable that is a collider, does it make a difference if it is tested stratified or as an interaction term\n\nnote this isn't an issue for age which can't be a collider\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 10000\nx <- rnorm(n)\ny <- rnorm(n)\nu <- x + y + rnorm(n)\nC <- rbinom(n, 1, plogis(u))\nsummary(lm(y ~ x, subset=C==1))$coef[2,1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.1274305\n```\n:::\n\n```{.r .cell-code}\nsummary(lm(y ~ x, subset=C==0))$coef[2,1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] -0.1197606\n```\n:::\n\n```{.r .cell-code}\nsummary(lm(y ~ x))$coef[2,1]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.003735308\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lm(y ~ x * as.factor(C)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y ~ x * as.factor(C))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-3.6992 -0.6213 -0.0028  0.6146  3.3290 \n\nCoefficients:\n                Estimate Std. Error t value Pr(>|t|)    \n(Intercept)     -0.37280    0.01379 -27.034   <2e-16 ***\nx               -0.11976    0.01423  -8.415   <2e-16 ***\nas.factor(C)1    0.74257    0.01964  37.802   <2e-16 ***\nx:as.factor(C)1 -0.00767    0.01993  -0.385      0.7    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9241 on 9996 degrees of freedom\nMultiple R-squared:  0.1251,\tAdjusted R-squared:  0.1248 \nF-statistic: 476.5 on 3 and 9996 DF,  p-value: < 2.2e-16\n```\n:::\n\n```{.r .cell-code}\nsummary(lm(y ~ x : as.factor(C)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y ~ x:as.factor(C))\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-4.0158 -0.6645 -0.0068  0.6616  3.2348 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(>|t|)\n(Intercept)     -0.006836   0.010499  -0.651    0.515\nx:as.factor(C)0  0.009325   0.014769   0.631    0.528\nx:as.factor(C)1 -0.001655   0.014488  -0.114    0.909\n\nResidual standard error: 0.988 on 9997 degrees of freedom\nMultiple R-squared:  4.045e-05,\tAdjusted R-squared:  -0.0001596 \nF-statistic: 0.2022 on 2 and 9997 DF,  p-value: 0.8169\n```\n:::\n:::\n\n\n## Summary\n\n- interaction with a collider is a problem as expected\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.0 (2023-04-21)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.5.2\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] lme4_1.1-33   Matrix_1.5-4  ggplot2_3.4.2 dplyr_1.1.2  \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.3      jsonlite_1.8.7    compiler_4.3.0    Rcpp_1.0.10      \n [5] tidyselect_1.2.0  splines_4.3.0     scales_1.2.1      boot_1.3-28.1    \n [9] yaml_2.3.7        fastmap_1.1.1     lattice_0.21-8    R6_2.5.1         \n[13] labeling_0.4.2    generics_0.1.3    knitr_1.43        htmlwidgets_1.6.2\n[17] MASS_7.3-58.4     tibble_3.2.1      nloptr_2.0.3      munsell_0.5.0    \n[21] minqa_1.2.5       pillar_1.9.0      rlang_1.1.1       utf8_1.2.3       \n[25] xfun_0.39         cli_3.6.1         mgcv_1.8-42       withr_2.5.0      \n[29] magrittr_2.0.3    digest_0.6.31     grid_4.3.0        rstudioapi_0.14  \n[33] lifecycle_1.0.3   nlme_3.1-162      vctrs_0.6.3       evaluate_0.21    \n[37] glue_1.6.2        farver_2.1.1      fansi_1.0.4       colorspace_2.1-0 \n[41] rmarkdown_2.22    tools_4.3.0       pkgconfig_2.0.3   htmltools_0.5.5  \n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}