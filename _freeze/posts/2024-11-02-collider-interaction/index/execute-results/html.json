{
  "hash": "a9a688b9ed561889020cd1e746535d6d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Collider bias interactions\"\nauthor: Gibran Hemani\ndate: \"2024-11-02\"\ncategories: []\nexecute: \n    eval: false\n\n---\n\n\n## Background\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(purrr)\nlibrary(ggplot2)\n\nn <- 1000000\ng1 <- rbinom(n, 2, 0.4) %>% scale(scale=FALSE)\ng2 <- rbinom(n, 2, 0.4) %>% scale(scale=FALSE)\ng3 <- rbinom(n, 2, 0.4) %>% scale(scale=FALSE)\nu <- rnorm(n)\ne1 <- rnorm(n)\ne2 <- rnorm(n)\nbmi <- g1 + g2 + u + e1\ncancer_liability <- u + bmi + g3 + e2\ncancer <- rbinom(n, 1, plogis(cancer_liability-3))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(cancer)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(glm(cancer ~ bmi + u))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lm(bmi ~ g1))\nsummary(lm(bmi ~ g1, subset=cancer==1))\nsummary(lm(bmi ~ g1, subset=cancer==0))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lm(bmi ~ g1 * cancer))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsim <- function(nid, beta_u1, beta_u2, beta_x=1, beta_g1=1, beta_g2=1, beta_g3=1, p1=0.4, p2=0.4, p3=0.4, ve1=1, ve2=1, intercept=-3, sim=1, scale=c(\"additive\", \"log-additive\")[1], transform=TRUE) {\n  out <- c(as.list(environment())) %>% as_tibble()\n\n  g1 <- rbinom(nid, 2, p1) %>% scale(scale=FALSE)\n  g2 <- rbinom(nid, 2, p2) %>% scale(scale=FALSE)\n  g3 <- rbinom(nid, 2, p3) %>% scale(scale=FALSE)\n  u <- rnorm(nid)\n  e1 <- rnorm(nid, sd=sqrt(ve1))\n  e2 <- rnorm(nid, sd=sqrt(ve2))\n  if(scale==\"additive\") {\n    bmi <- g1 * beta_g1 + g2 * beta_g2 + u * beta_u1 + e1\n  } else if(scale == \"log-additive\") {\n    bmi <- exp(g1 * beta_g1) * exp(g2 * beta_g2) * exp(u * beta_u1) * exp(e1)\n  } else {\n    stop(\"scale must be additive or log-additive\")\n  }\n  \n  if(scale == \"additive\") {\n    cancer_liability <- intercept + u * beta_u2 + bmi * beta_x + g3 * beta_g3 + e2\n  } else if(scale == \"log-additive\") {\n    cancer_liability <- exp(intercept) * exp(u * beta_u2) * exp(bmi * beta_x) * exp(g3 * beta_g3) * exp(e2)\n  } else {\n    stop(\"scale must be additive or log-additive\")\n  }\n  \n  cancer <- rbinom(nid, 1, plogis(cancer_liability))\n  \n  if(transform) {\n    bmi <- log(bmi)\n  }\n  \n  mod1 <- summary(lm(bmi ~ g1))\n  mod2 <- summary(lm(bmi ~ g1, subset=cancer == 0))\n  mod3 <- summary(lm(bmi ~ g1, subset=cancer == 1))\n  mod4 <- summary(lm(bmi ~ g3 * cancer))\n  \n  o <- tibble(\n    model = c(\n    \"mod1\",\n    \"mod2\",\n    \"mod3\",\n    \"mod4_main\",\n    \"mod4_gxe\"\n  ),\n  bhat = c(\n    mod1$coef[2,1],\n    mod2$coef[2,1],\n    mod3$coef[2,1],\n    mod4$coef[2,1],\n    mod4$coef[4,1]\n  )\n  )\n  o <- bind_cols(o, out)\n  \n  dat <- tibble(g1, g2, g3, u, bmi, cancer)\n  \n  return(list(o=o, dat=dat))\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n  sim(100000, 1, 1, scale=\"log-additive\")$dat %>% {hist(log(.$bmi))}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nparam <- expand.grid(\n  n=100000,\n  beta_u1 = c(0, 1),\n  beta_u2 = c(0, 1),\n  beta_g2 = c(0, 1),\n  beta_g3 = c(0, 1),\n  beta_x = c(0, 1),\n  sim=1:10\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nres <- pmap(param, sim) %>% bind_rows()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(res %>% filter(beta_g3 == 0 & !grepl(\"mod4\", model)), aes(x=as.factor(beta_g2), y=bhat)) +\n  geom_boxplot(aes(fill=model, colour=as.factor(beta_x))) +\n  facet_grid(beta_u1 ~ beta_u2, labeller = label_both)\n```\n:::\n\n\n\nThe bias in bhat_g1bmi|c is based on all ancestors of bmi when conditioning on cancer status\n\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- sim(100000, beta_u1=0, beta_u2=0, beta_g3=0, ve1=0, beta_g2=0)$dat\nsummary(lm(g1 ~ g2, d, subset=d$cancer == 1))\nsummary(lm(bmi ~ g1, d, subset=d$cancer == 0))\nsummary(lm(bmi ~ g1, d))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 10000\ng1 <- rnorm(n)\ng2 <- rnorm(n)\ng3 <- rnorm(n)\ne <- rnorm(n)\n\nx <- g1 + g2 + g3 + e\ny <- rbinom(n, 1, plogis(x))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsim(10000, 1, 1, scale=\"log-additive\", transform=FALSE)[[\"o\"]]\nsim(10000, 1, 1, scale=\"log-additive\", transform=TRUE)[[\"o\"]]\nsim(10000, 1, 1, scale=\"additive\", transform=FALSE)[[\"o\"]]\nsim(10000, 1, 1, scale=\"additive\", transform=TRUE)[[\"o\"]]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlog(-1)\n```\n:::\n\n\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}