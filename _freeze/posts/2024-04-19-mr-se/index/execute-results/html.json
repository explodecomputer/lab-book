{
  "hash": "17de8d56064106bca60a75027ae56ed1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"MR Standard errors\"\nauthor: Gibran Hemani\ndate: \"2024-04-19\"\ncategories: []\n---\n\n\n## Background\n\nIs there a problem of standard errors in MR methods being overly precise?\n\nSimulate summary data where the exposure has an influence of `bxy` on the outcome, but the SNPs may have independent effects on the outcome as well. \n\nSimulate 10k SNPs, with 50% of them contributing to heritability.\n\nThe pleiotropy effect is that for X and Y, 50% of SNPs are selected independently to contribute to some heritability.\n\nThe causal effect is that the the bgx effects on have an additional effect on y of bgx * bxy.\n\n- bxy = 0, pleiotropy = 0\n- bxy = 0, pleiotropy = 0.4\n- bxy = 0.4, pleiotropy = 0\n- bxy = 0.4, pleiotropy = 0.4\n\nFor scenarios where bxy = 0, expect that false positive rate is appropriately controlled for IVW, weighted median, weighted mode.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(12345)\nlibrary(TwoSampleMR)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nTwoSampleMR version 0.5.11 \n[>] New: Option to use non-European LD reference panels for clumping etc\n[>] Some studies temporarily quarantined to verify effect allele\n[>] See news(package = 'TwoSampleMR') and https://gwas.mrcieu.ac.uk for further details\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(simulateGP)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'simulateGP'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:TwoSampleMR':\n\n    allele_frequency, contingency, get_population_allele_frequency\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(knitr)\n\nsim <- function(nsnp, nid, plei, bxy, sim=1) {\n    \n    # Allele frequencies\n    map <- arbitrary_map(runif(nsnp, 0.01, 0.99))\n\n    # Effects for x\n    paramsx <- generate_gwas_params(map=map, h2=0.4, S=-0.4, Pi=0.5)\n\n    # Summary stats for x\n    betax <- generate_gwas_ss(paramsx, nid=nid)\n\n    # Effects for y\n    paramsy <- generate_gwas_params(map=map, h2=plei, S=-0.4, Pi=0.5) %>% mutate(beta = beta + paramsx$beta * bxy)\n\n    # summary stats for y\n    betay <- generate_gwas_ss(paramsy, nid=nid)\n    dat <- merge_exp_out(betax, betay) \n\n    \n    bind_rows(\n        # Analysis using thresholded instruments\n        dat %>%\n            filter(pval.exposure < 5e-8) %>%\n            mr(., method_list=c(\"mr_ivw\", \"mr_weighted_median\", \"mr_weighted_mode\")) %>%\n            mutate(inst = \"threshold\"),\n        # Analysis using all variants regardless of threshold\n        dat %>%\n            mr(., method_list=c(\"mr_ivw\", \"mr_weighted_median\", \"mr_weighted_mode\")) %>%\n            mutate(inst = \"all\"),\n    ) %>%\n        mutate(plei=plei, bxy=bxy, sim=sim)\n}\n\nsim(10000, 100000, 0.4, 0)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAnalysing 'X' on 'Y'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAnalysing 'X' on 'Y'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  id.exposure id.outcome outcome exposure                    method  nsnp\n1           X          Y       Y        X Inverse variance weighted   346\n2           X          Y       Y        X           Weighted median   346\n3           X          Y       Y        X             Weighted mode   346\n4           X          Y       Y        X Inverse variance weighted 10000\n5           X          Y       Y        X           Weighted median 10000\n6           X          Y       Y        X             Weighted mode 10000\n              b           se      pval      inst plei bxy sim\n1 -0.0132785411 1.862067e-02 0.4757792 threshold  0.4   0   1\n2  0.0053904701 1.356861e-02 0.6911646 threshold  0.4   0   1\n3  0.0325270703 4.133091e-02 0.4318272 threshold  0.4   0   1\n4 -0.0089724040 1.006037e-02 0.3724701       all  0.4   0   1\n5 -0.0003497783 8.313815e-03 0.9664413       all  0.4   0   1\n6  4.6421866726 1.341177e+05 0.9999724       all  0.4   0   1\n```\n\n\n:::\n\n```{.r .cell-code}\nsim(10000, 100000, 0, 0.4)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nAnalysing 'X' on 'Y'\nAnalysing 'X' on 'Y'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  id.exposure id.outcome outcome exposure                    method  nsnp\n1           X          Y       Y        X Inverse variance weighted   338\n2           X          Y       Y        X           Weighted median   338\n3           X          Y       Y        X             Weighted mode   338\n4           X          Y       Y        X Inverse variance weighted 10000\n5           X          Y       Y        X           Weighted median 10000\n6           X          Y       Y        X             Weighted mode 10000\n           b           se          pval      inst plei bxy sim\n1  0.3646894 7.852256e-03  0.000000e+00 threshold    0 0.4   1\n2  0.3515298 1.220235e-02 1.684991e-182 threshold    0 0.4   1\n3  0.3313245 4.271241e-02  1.043069e-13 threshold    0 0.4   1\n4  0.3242457 4.724237e-03  0.000000e+00       all    0 0.4   1\n5  0.3190166 7.740202e-03  0.000000e+00       all    0 0.4   1\n6 -2.2205335 2.014174e+03  9.991204e-01       all    0 0.4   1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nparams <- expand.grid(\n    nsnp = 10000,\n    nid = 100000,\n    plei = c(0, 0.4),\n    bxy = c(0, 0.4),\n    sim = 1:100\n)\nres <- lapply(1:nrow(params), \\(i) {\n    do.call(sim, as.list(params[i,])) %>% suppressMessages()\n})\nres <- bind_rows(res)\nsave(res, file=\"res.RData\")\n```\n:::\n\n\nSimulation results under bxy = 0\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(file=\"res.RData\")\ngroup_by(res, plei, bxy, method, inst) %>%\n    summarise(\n        mean_se = mean(se), \n        mean_beta = mean(b), \n        power = sum(pval < 0.05) / n(),\n        minp = min(pval)\n    ) %>% filter(bxy == 0) %>% kable()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'plei', 'bxy', 'method'. You can override\nusing the `.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output-display}\n\n\n| plei| bxy|method                    |inst      |      mean_se|  mean_beta| power|      minp|\n|----:|---:|:-------------------------|:---------|------------:|----------:|-----:|---------:|\n|  0.0|   0|Inverse variance weighted |all       | 4.485900e-03| -0.0007847|  0.01| 0.0474438|\n|  0.0|   0|Inverse variance weighted |threshold | 7.827900e-03| -0.0006856|  0.04| 0.0245715|\n|  0.0|   0|Weighted median           |all       | 7.293300e-03| -0.0000214|  0.00| 0.0562561|\n|  0.0|   0|Weighted median           |threshold | 1.140910e-02| -0.0000122|  0.01| 0.0359994|\n|  0.0|   0|Weighted mode             |all       | 3.678866e+05|  3.0237440|  0.00| 0.9989783|\n|  0.0|   0|Weighted mode             |threshold | 3.846430e-02| -0.0002435|  0.00| 0.1227612|\n|  0.4|   0|Inverse variance weighted |all       | 9.991900e-03|  0.0003727|  0.08| 0.0046424|\n|  0.4|   0|Inverse variance weighted |threshold | 1.808060e-02| -0.0015122|  0.06| 0.0133826|\n|  0.4|   0|Weighted median           |all       | 8.587800e-03| -0.0006092|  0.04| 0.0022668|\n|  0.4|   0|Weighted median           |threshold | 1.339560e-02| -0.0013472|  0.04| 0.0137506|\n|  0.4|   0|Weighted mode             |all       | 1.069980e+06|  7.1229065|  0.00| 0.9979213|\n|  0.4|   0|Weighted mode             |threshold | 3.769040e-02| -0.0004433|  0.01| 0.0300066|\n\n\n:::\n:::\n\n\nSimulation results under bxy = 0.4\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngroup_by(res, plei, bxy, method, inst) %>%\n    summarise(\n        mean_se = mean(se), \n        mean_beta = mean(b), \n        power = sum(pval < 0.05) / n(),\n        minp = min(pval)\n    ) %>% filter(bxy == 0.4) %>% kable()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'plei', 'bxy', 'method'. You can override\nusing the `.groups` argument.\n```\n\n\n:::\n\n::: {.cell-output-display}\n\n\n| plei| bxy|method                    |inst      |     mean_se|   mean_beta| power|      minp|\n|----:|---:|:-------------------------|:---------|-----------:|-----------:|-----:|---------:|\n|  0.0| 0.4|Inverse variance weighted |all       | 4.74690e-03|   0.3203781|     1| 0.0000000|\n|  0.0| 0.4|Inverse variance weighted |threshold | 8.26810e-03|   0.3607363|     1| 0.0000000|\n|  0.0| 0.4|Weighted median           |all       | 7.76120e-03|   0.3170201|     1| 0.0000000|\n|  0.0| 0.4|Weighted median           |threshold | 1.21785e-02|   0.3478450|     1| 0.0000000|\n|  0.0| 0.4|Weighted mode             |all       | 5.44511e+05| -16.6974825|     0| 0.9988647|\n|  0.0| 0.4|Weighted mode             |threshold | 4.15776e-02|   0.3481614|     1| 0.0000000|\n|  0.4| 0.4|Inverse variance weighted |all       | 1.01325e-02|   0.3184288|     1| 0.0000000|\n|  0.4| 0.4|Inverse variance weighted |threshold | 1.83467e-02|   0.3601333|     1| 0.0000000|\n|  0.4| 0.4|Weighted median           |all       | 8.99970e-03|   0.2923377|     1| 0.0000000|\n|  0.4| 0.4|Weighted median           |threshold | 1.41112e-02|   0.3272884|     1| 0.0000000|\n|  0.4| 0.4|Weighted mode             |all       | 8.06599e+06| 147.1660233|     0| 0.9984827|\n|  0.4| 0.4|Weighted mode             |threshold | 4.08282e-02|   0.3404088|     1| 0.0000000|\n\n\n:::\n:::\n\n\n## Summary\n\n- Under no pleiotropy the false positive rate is controlled (actually median and mode are slightly over conservative)\n- Under pleiotropy the false positive rate is controlled for weighted mode but slightly inflated for weighted median\n- Not obvious that the bootstrap approach for obtaining standard errors here, which is used by weighted median and weighted mode, is performing particularly poorly.\n- This is only 100 replications so may be unstable but there isn't something very obviously wrong here.\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.3.3 (2024-02-29)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.6\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] knitr_1.45         ggplot2_3.4.2      dplyr_1.1.4        simulateGP_0.1.3  \n[5] TwoSampleMR_0.5.11\n\nloaded via a namespace (and not attached):\n [1] vctrs_0.6.5       cli_3.6.2         rlang_1.1.3       xfun_0.42        \n [5] generics_0.1.3    jsonlite_1.8.8    data.table_1.14.8 glue_1.7.0       \n [9] colorspace_2.1-0  plyr_1.8.8        htmltools_0.5.7   scales_1.2.1     \n[13] fansi_1.0.6       rmarkdown_2.26    grid_4.3.3        munsell_0.5.0    \n[17] evaluate_0.23     tibble_3.2.1      fastmap_1.1.1     yaml_2.3.8       \n[21] lifecycle_1.0.4   compiler_4.3.3    Rcpp_1.0.12       htmlwidgets_1.6.3\n[25] pkgconfig_2.0.3   digest_0.6.34     R6_2.5.1          tidyselect_1.2.0 \n[29] utf8_1.2.4        pillar_1.9.0      magrittr_2.0.3    withr_3.0.0      \n[33] gtable_0.3.3      tools_4.3.3      \n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}