{
  "hash": "88259c90e1ce87650b33987306aeac0c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Time varying MR\"\nauthor: Gibran Hemani\ndate: \"2024-01-12\"\ncategories: []\n---\n\n\n## Background\n\nWork from Panagiota Pagoni looked at time-varying instruments for MR. Idea is to estimate the main and age interaction genetic effects on X, and then perform multivariable MR of main + interaction against outcome.\n\nSimple model below to see what happens...\n\n1. Simulate `n_id` individuals with `x` values for each `age` ranging from `1:n_age`.\n2. There are `n_snp`s and each SNP has a different effect on `x` before age 15 and after age 15\n3. `y` is influenced by `x` at age 12 and `x` at age 24. The effect of `x` on `y` has opposing directions at these two time points.\n4. Estimation\n    1. Randomly sample one age point per individual\n    2. Estimate either a main effect of each SNP on `x` to obtain `beta_gx`, or estimate main + interaction effect of each SNP on `x` to get `beta_gxm` and `beta_gxi`.\n    3. Estimate effect of each SNP on `y` to get `beta_gy`\n    4. Univariable MR of `beta_gy ~ beta_gx`\n    5. Multivariable MR of `beta_gy ~ beta_gxm + beta_gxi`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nset.seed(1234)\n```\n:::\n\n\nSet parameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_id <- 1000\nn_snp <- 10\ng <- matrix(rbinom(n_id*n_snp, 2, 0.4), n_id, n_snp)\nn_age <- 30\nbeta <- matrix(rnorm(n_snp * 2), n_snp, 2)\nbeta_xy1 <- 1\nbeta_xy2 <- -0.3\n```\n:::\n\n\nSimulate x\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- lapply(\n    1:n_age, \\(i) {\n        dat <- tibble(\n            id = 1:n_id,\n            age = i,\n            score1 = g %*% beta[,1] %>% drop(),\n            score2 = g %*% beta[,2] %>% drop(),\n            x = case_when(\n                age < 15 ~ rnorm(n_id) + score1,\n                TRUE ~ rnorm(n_id) + score2\n            )\n        )\n    }\n) %>% bind_rows()\ndat\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 30,000 × 5\n      id   age score1 score2      x\n   <int> <int>  <dbl>  <dbl>  <dbl>\n 1     1     1 -0.228 -0.100  0.478\n 2     2     1 -0.795 -0.700 -0.510\n 3     3     1 -0.144  0.972 -0.329\n 4     4     1 -1.74   0.505 -3.27 \n 5     5     1  3.26  -5.00   3.30 \n 6     6     1  3.47  -4.85   2.78 \n 7     7     1  2.78  -1.75   2.12 \n 8     8     1  5.40  -4.74   6.29 \n 9     9     1  1.50   0.976  2.38 \n10    10     1  0.295  2.22   0.662\n# ℹ 29,990 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nplot(dat$score1, dat$score2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nSimulate y\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 <- tibble(id = 1:n_id, x1 = subset(dat, age == 12)$x, x2 = subset(dat, age == 24)$x, y = x1 * beta_xy1 + x2 * beta_xy2 + rnorm(n_id))\nplot(dat2$x1, dat2$x2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nEstimation of gx\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndats <- dat %>% group_by(id) %>% slice_sample(n=1)\ngx <- lapply(1:n_snp, \\(i) {\n    summary(lm(x ~ g[,i] * age, data=dats))$coef[c(2, 4), ] %>%\n    as_tibble() %>%\n    mutate(what=c(\"main\", \"interaction\"))\n}) %>% bind_rows()\ngx\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 20 × 5\n   Estimate `Std. Error` `t value` `Pr(>|t|)` what       \n      <dbl>        <dbl>     <dbl>      <dbl> <chr>      \n 1 -1.06          0.218     -4.86    1.35e- 6 main       \n 2  0.0613        0.0124     4.94    8.99e- 7 interaction\n 3  0.219         0.228      0.959   3.38e- 1 main       \n 4  0.00270       0.0131     0.206   8.37e- 1 interaction\n 5 -1.41          0.217     -6.49    1.37e-10 main       \n 6  0.0941        0.0124     7.60    6.86e-14 interaction\n 7 -0.468         0.222     -2.11    3.53e- 2 main       \n 8  0.00321       0.0126     0.255   7.99e- 1 interaction\n 9 -0.336         0.219     -1.53    1.25e- 1 main       \n10 -0.0178        0.0121    -1.47    1.41e- 1 interaction\n11  0.760         0.226      3.37    7.79e- 4 main       \n12  0.00458       0.0126     0.363   7.16e- 1 interaction\n13  1.93          0.216      8.91    2.47e-18 main       \n14 -0.0902        0.0123    -7.31    5.47e-13 interaction\n15 -0.427         0.239     -1.78    7.46e- 2 main       \n16  0.0175        0.0136     1.29    1.99e- 1 interaction\n17  0.716         0.223      3.21    1.39e- 3 main       \n18 -0.0582        0.0126    -4.61    4.57e- 6 interaction\n19  2.89          0.187     15.5     1.04e-48 main       \n20 -0.211         0.0107   -19.8     1.37e-73 interaction\n```\n\n\n:::\n\n```{.r .cell-code}\ngxm <- lapply(1:n_snp, \\(i) {\n    summary(lm(x ~ g[,i], data=dats))$coef %>%\n    as_tibble() %>% slice_tail(n=1)\n}) %>% bind_rows()\ngxm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   Estimate `Std. Error` `t value` `Pr(>|t|)`\n      <dbl>        <dbl>     <dbl>      <dbl>\n 1  -0.0135        0.120    -0.112   9.11e- 1\n 2   0.234         0.124     1.89    5.95e- 2\n 3  -0.0457        0.121    -0.377   7.06e- 1\n 4  -0.385         0.120    -3.22    1.32e- 3\n 5  -0.600         0.119    -5.04    5.53e- 7\n 6   0.797         0.121     6.60    6.75e-11\n 7   0.465         0.122     3.83    1.38e- 4\n 8  -0.174         0.124    -1.41    1.60e- 1\n 9  -0.181         0.122    -1.48    1.39e- 1\n10  -0.377         0.121    -3.11    1.91e- 3\n```\n\n\n:::\n:::\n\n\nEstimation of gy\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngy <- lapply(1:n_snp, \\(i) {\n    summary(lm(y ~ g[,i], data=dat2))$coef %>%\n    as_tibble() %>% slice_tail(n=1)\n}) %>% bind_rows()\ngy\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 4\n   Estimate `Std. Error` `t value` `Pr(>|t|)`\n      <dbl>        <dbl>     <dbl>      <dbl>\n 1   -1.23         0.120    -10.3    1.11e-23\n 2    0.248        0.130      1.91   5.69e- 2\n 3   -1.22         0.121    -10.1    8.70e-23\n 4   -0.442        0.125     -3.53   4.34e- 4\n 5   -0.301        0.126     -2.38   1.73e- 2\n 6    0.517        0.128      4.03   6.03e- 5\n 7    1.44         0.120     12.0    3.86e-31\n 8   -0.492        0.129     -3.81   1.50e- 4\n 9    1.03         0.124      8.29   3.71e-16\n10    2.30         0.105     22.0    1.90e-87\n```\n\n\n:::\n:::\n\n\nUnivariable MR\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lm(gy$Estimate ~ gxm$Estimate, weight=1/gy$`Std. Error`^2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = gy$Estimate ~ gxm$Estimate, weights = 1/gy$`Std. Error`^2)\n\nWeighted Residuals:\n    Min      1Q  Median      3Q     Max \n-12.552  -5.469  -2.040   4.930  20.153 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)\n(Intercept)    0.2739     0.4130   0.663    0.526\ngxm$Estimate   0.2270     1.0380   0.219    0.832\n\nResidual standard error: 10.62 on 8 degrees of freedom\nMultiple R-squared:  0.005941,\tAdjusted R-squared:  -0.1183 \nF-statistic: 0.04782 on 1 and 8 DF,  p-value: 0.8324\n```\n\n\n:::\n:::\n\n\nMultivariable MR\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lm(gy$Estimate ~ gx$Estimate[gx$what==\"main\"] + gx$Estimate[gx$what==\"interaction\"], weight=1/gy$`Std. Error`^2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = gy$Estimate ~ gx$Estimate[gx$what == \"main\"] + gx$Estimate[gx$what == \n    \"interaction\"], weights = 1/gy$`Std. Error`^2)\n\nWeighted Residuals:\n    Min      1Q  Median      3Q     Max \n-2.3296 -0.7207 -0.0687  0.2519  3.7992 \n\nCoefficients:\n                                      Estimate Std. Error t value Pr(>|t|)   \n(Intercept)                           -0.06306    0.07384  -0.854  0.42137   \ngx$Estimate[gx$what == \"main\"]         0.77715    0.17219   4.513  0.00275 **\ngx$Estimate[gx$what == \"interaction\"] -1.09444    2.64623  -0.414  0.69155   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.827 on 7 degrees of freedom\nMultiple R-squared:  0.9743,\tAdjusted R-squared:  0.9669 \nF-statistic: 132.5 on 2 and 7 DF,  p-value: 2.733e-06\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntibble(\n    main = gxm$Estimate,\n    main_intmod = gx$Estimate[gx$what==\"main\"],\n    int_intmod = gx$Estimate[gx$what==\"interaction\"]\n) %>% plot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nUnivariable MR using only main effect from interaction model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(lm(gy$Estimate ~ gx$Estimate[gx$what==\"main\"] + gx$Estimate[gx$what==\"interaction\"], weight=1/gy$`Std. Error`^2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = gy$Estimate ~ gx$Estimate[gx$what == \"main\"] + gx$Estimate[gx$what == \n    \"interaction\"], weights = 1/gy$`Std. Error`^2)\n\nWeighted Residuals:\n    Min      1Q  Median      3Q     Max \n-2.3296 -0.7207 -0.0687  0.2519  3.7992 \n\nCoefficients:\n                                      Estimate Std. Error t value Pr(>|t|)   \n(Intercept)                           -0.06306    0.07384  -0.854  0.42137   \ngx$Estimate[gx$what == \"main\"]         0.77715    0.17219   4.513  0.00275 **\ngx$Estimate[gx$what == \"interaction\"] -1.09444    2.64623  -0.414  0.69155   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.827 on 7 degrees of freedom\nMultiple R-squared:  0.9743,\tAdjusted R-squared:  0.9669 \nF-statistic: 132.5 on 2 and 7 DF,  p-value: 2.733e-06\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(lm(gy$Estimate ~ gx$Estimate[gx$what==\"interaction\"], weight=1/gy$`Std. Error`^2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = gy$Estimate ~ gx$Estimate[gx$what == \"interaction\"], \n    weights = 1/gy$`Std. Error`^2)\n\nWeighted Residuals:\n    Min      1Q  Median      3Q     Max \n-3.5825 -2.5945 -0.6845  2.9359  5.0269 \n\nCoefficients:\n                                       Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                            -0.07095    0.13653  -0.520    0.617    \ngx$Estimate[gx$what == \"interaction\"] -12.48205    1.47600  -8.457 2.92e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.379 on 8 degrees of freedom\nMultiple R-squared:  0.8994,\tAdjusted R-squared:  0.8868 \nF-statistic: 71.52 on 1 and 8 DF,  p-value: 2.922e-05\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(lm(gy$Estimate ~ gx$Estimate[gx$what==\"main\"], weight=1/gy$`Std. Error`^2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = gy$Estimate ~ gx$Estimate[gx$what == \"main\"], weights = 1/gy$`Std. Error`^2)\n\nWeighted Residuals:\n    Min      1Q  Median      3Q     Max \n-2.3163 -0.7453 -0.2029  0.3130  3.8931 \n\nCoefficients:\n                               Estimate Std. Error t value Pr(>|t|)    \n(Intercept)                    -0.05969    0.06948  -0.859    0.415    \ngx$Estimate[gx$what == \"main\"]  0.84505    0.04916  17.190 1.33e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.73 on 8 degrees of freedom\nMultiple R-squared:  0.9736,\tAdjusted R-squared:  0.9703 \nF-statistic: 295.5 on 1 and 8 DF,  p-value: 1.334e-07\n```\n\n\n:::\n:::\n\n\n\n## Run a few different parameters\n\nMake simulation and estimation functions from above\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim <- function(n_id, n_snp, n_age, beta_xy1, beta_xy2) {\n    g <- matrix(rbinom(n_id*n_snp, 2, 0.4), n_id, n_snp)\n    beta <- matrix(rnorm(n_snp * 2), n_snp, 2)\n    dat <- lapply(\n        1:n_age, \\(i) {\n            dat <- tibble(\n                id = 1:n_id,\n                age = i,\n                score1 = g %*% beta[,1] %>% drop(),\n                score2 = g %*% beta[,2] %>% drop(),\n                x = case_when(\n                    age < 15 ~ rnorm(n_id) + score1,\n                    TRUE ~ rnorm(n_id) + score2\n                )\n            )\n        }\n    ) %>% bind_rows()\n\n    dat2 <- tibble(id = 1:n_id, x1 = subset(dat, age == 12)$x, x2 = subset(dat, age == 24)$x, y = x1 * beta_xy1 + x2 * beta_xy2 + rnorm(n_id))\n    dats <- dat %>% group_by(id) %>% slice_sample(n=1)\n    gx <- lapply(1:n_snp, \\(i) {\n        summary(lm(x ~ g[,i] * age, data=dats))$coef[c(2, 4), ] %>%\n        as_tibble() %>%\n        mutate(what=c(\"main\", \"interaction\"))\n    }) %>% bind_rows()\n\n    gxm <- lapply(1:n_snp, \\(i) {\n        summary(lm(x ~ g[,i], data=dats))$coef %>%\n        as_tibble() %>% slice_tail(n=1)\n    }) %>% bind_rows()\n\n    gy <- lapply(1:n_snp, \\(i) {\n        summary(lm(y ~ g[,i], data=dat2))$coef %>%\n        as_tibble() %>% slice_tail(n=1)\n    }) %>% bind_rows()\n\n    return(list(gy=gy, gx=gx, gxm=gxm))\n}\n\nestimation <- function(ests) {\n    return(list(\n        main = with(ests, summary(lm(gy$Estimate ~ 0 + gxm$Estimate, weight=1/gy$`Std. Error`^2))$coef),\n        full = with(ests, summary(lm(gy$Estimate ~ 0 + gx$Estimate[gx$what==\"main\"] + gx$Estimate[gx$what==\"interaction\"], weight=1/gy$`Std. Error`^2))$coef),\n        int_main = with(ests, summary(lm(gy$Estimate ~ 0 + gx$Estimate[gx$what==\"main\"], weight=1/gy$`Std. Error`^2))$coef),\n        int_int = with(ests, summary(lm(gy$Estimate ~ 0 + gx$Estimate[gx$what==\"interaction\"], weight=1/gy$`Std. Error`^2))$coef)\n    ))\n}\n```\n:::\n\n\n\n### Null model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim(n_id=1000, n_snp=10, n_age=30, beta_xy1=0, beta_xy2=0) %>% estimation\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$main\n                Estimate Std. Error   t value  Pr(>|t|)\ngxm$Estimate -0.03131924 0.02202768 -1.421813 0.1887952\n\n$full\n                                        Estimate Std. Error    t value\ngx$Estimate[gx$what == \"main\"]        -0.0235155 0.02371966 -0.9913928\ngx$Estimate[gx$what == \"interaction\"] -0.1510470 0.46080124 -0.3277921\n                                       Pr(>|t|)\ngx$Estimate[gx$what == \"main\"]        0.3505285\ngx$Estimate[gx$what == \"interaction\"] 0.7514828\n\n$int_main\n                                  Estimate  Std. Error   t value  Pr(>|t|)\ngx$Estimate[gx$what == \"main\"] -0.01642267 0.009222158 -1.780784 0.1086416\n\n$int_int\n                                       Estimate Std. Error  t value  Pr(>|t|)\ngx$Estimate[gx$what == \"interaction\"] 0.2656993  0.1885832 1.408923 0.1924575\n```\n\n\n:::\n:::\n\n\nNo associations at any model\n\n### Same effect at each time point\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim(n_id=1000, n_snp=10, n_age=30, beta_xy1=1, beta_xy2=1) %>% estimation\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$main\n             Estimate Std. Error  t value     Pr(>|t|)\ngxm$Estimate 2.210015  0.1139279 19.39837 1.188461e-08\n\n$full\n                                       Estimate Std. Error  t value\ngx$Estimate[gx$what == \"main\"]         2.066242 0.06113766 33.79655\ngx$Estimate[gx$what == \"interaction\"] 29.105622 1.39147350 20.91712\n                                          Pr(>|t|)\ngx$Estimate[gx$what == \"main\"]        6.416918e-10\ngx$Estimate[gx$what == \"interaction\"] 2.863315e-08\n\n$int_main\n                               Estimate Std. Error  t value    Pr(>|t|)\ngx$Estimate[gx$what == \"main\"] 1.025186  0.2498177 4.103738 0.002661794\n\n$int_int\n                                       Estimate Std. Error   t value  Pr(>|t|)\ngx$Estimate[gx$what == \"interaction\"] -9.177769   9.135675 -1.004608 0.3413298\n```\n\n\n:::\n:::\n\n\nMain effect as expected, interaction term is there because of accumulated effect?\n\n### No effect at second time point\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim(n_id=10000, n_snp=10, n_age=30, beta_xy1=1, beta_xy2=0) %>% estimation\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$main\n              Estimate Std. Error  t value   Pr(>|t|)\ngxm$Estimate 0.7739871  0.2630003 2.942913 0.01640885\n\n$full\n                                       Estimate Std. Error  t value\ngx$Estimate[gx$what == \"main\"]        0.9913733 0.01897743 52.23960\ngx$Estimate[gx$what == \"interaction\"] 4.9867301 0.32304742 15.43653\n                                          Pr(>|t|)\ngx$Estimate[gx$what == \"main\"]        1.998216e-11\ngx$Estimate[gx$what == \"interaction\"] 3.084458e-07\n\n$int_main\n                                Estimate Std. Error  t value     Pr(>|t|)\ngx$Estimate[gx$what == \"main\"] 0.7830066 0.06978057 11.22098 1.361042e-06\n\n$int_int\n                                       Estimate Std. Error   t value  Pr(>|t|)\ngx$Estimate[gx$what == \"interaction\"] -7.016759    3.95985 -1.771976 0.1101626\n```\n\n\n:::\n:::\n\n\nAlmost no interaction effect\n\n### No effect at first time point\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim(n_id=10000, n_snp=10, n_age=30, beta_xy1=0, beta_xy2=1) %>% estimation\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n$main\n             Estimate Std. Error  t value  Pr(>|t|)\ngxm$Estimate 1.084445    0.37676 2.878345 0.0182271\n\n$full\n                                       Estimate Std. Error  t value\ngx$Estimate[gx$what == \"main\"]         1.016923 0.02454421 41.43228\ngx$Estimate[gx$what == \"interaction\"] 25.108538 0.42035475 59.73178\n                                          Pr(>|t|)\ngx$Estimate[gx$what == \"main\"]        1.268347e-10\ngx$Estimate[gx$what == \"interaction\"] 6.856027e-12\n\n$int_main\n                                 Estimate Std. Error   t value  Pr(>|t|)\ngx$Estimate[gx$what == \"main\"] -0.2712219  0.2336052 -1.161027 0.2754984\n\n$int_int\n                                      Estimate Std. Error  t value    Pr(>|t|)\ngx$Estimate[gx$what == \"interaction\"] 9.805954   2.778471 3.529263 0.006421374\n```\n\n\n:::\n:::\n\n\nOnly shows an interaction effect.\n\n## Summary\n\nNo idea what is going on. This model is probably too simple, doesn't include auto-correlation in x across age.\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sonoma 14.6.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4\n\nloaded via a namespace (and not attached):\n [1] digest_0.6.37     utf8_1.2.4        R6_2.5.1          fastmap_1.2.0    \n [5] tidyselect_1.2.1  xfun_0.48         magrittr_2.0.3    glue_1.8.0       \n [9] tibble_3.2.1      knitr_1.48        pkgconfig_2.0.3   htmltools_0.5.8.1\n[13] rmarkdown_2.27    generics_0.1.3    lifecycle_1.0.4   cli_3.6.3        \n[17] fansi_1.0.6       vctrs_0.6.5       compiler_4.4.1    tools_4.4.1      \n[21] pillar_1.9.0      evaluate_1.0.1    yaml_2.3.10       rlang_1.1.4      \n[25] jsonlite_1.8.9    htmlwidgets_1.6.4\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}