{
  "hash": "db14bfff30b4a3a989511746f4844585",
  "result": {
    "markdown": "---\ntitle: \"Cell-specific effects for mQTLs from bulk tissue\"\nauthor: Gibran Hemani\ndate: \"2023-02-07\"\ncategories: [DNA methylation, statistics]\n---\n\n\n## Background\n\n- What is the data generating model for the mQTL x celltype interaction analysis?\n- Does this rescue the per-celltype mQTL effects?\n\n## Basic simulation\n\n- Five cell types\n- 10k individuals\n- Different SNP effect on methylation in each cell type\n- Each individual has a different cell type proportion\n- Bulk tissue is the weighted average of all the cell types (weighted by cell type proportion in the individual)\n- Can we recapitulate the cell-type specific effect through the interaction term?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nsim <- function(nc, n)\n{\n    g <- rbinom(n, 2, 0.4)\n    betas <- runif(nc, -2, 2)\n    m <- sapply(1:nc, function(i)\n    {\n        g * betas[i] + rnorm(n)\n    })\n    # for each individual sample cell type proportions\n    cellprop <- sapply(1:n, function(x) {a <- runif(nc); a/sum(a)}) %>% t()\n    # weighted sum\n    M <- (scale(m) * cellprop) %>% rowSums\n    res <- sapply(1:nc, function(i)\n    {\n      summary(lm(M ~ g * cellprop[,i]))$coef[4,1]\n    })\n    return(tibble(res, betas))\n}\n\no <- lapply(1:1000, function(i) sim(5, 10000) %>% mutate(sim=i)) %>% bind_rows()\no\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5,000 × 3\n       res   betas   sim\n     <dbl>   <dbl> <int>\n 1 -0.820  -1.59       1\n 2  0.358  -0.0905     1\n 3  0.0370 -0.481      1\n 4 -0.841  -1.62       1\n 5  1.24    0.459      1\n 6  1.70    1.34       2\n 7 -0.870  -1.35       2\n 8 -0.902  -1.39       2\n 9  0.942   0.500      2\n10 -0.788  -1.45       2\n# … with 4,990 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(o, aes(x=betas, y=res)) +\ngeom_point() +\ngeom_abline(colour=\"red\") +\ngeom_smooth()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\nGenerally seems to work but expect some shrinkage of large effects\n\n## Introduce measurement error in cell-type proportions\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncellprop_noise <- function(cellprop, sigma)\n{\n    apply(cellprop, 1, function(x)\n    {\n        a <- rnorm(length(x), x, sigma)\n        a / sum(a)\n    }) %>% t()\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsim2 <- function(nc, n, noise_sigma)\n{\n    g <- rbinom(n, 2, 0.4)\n    betas <- runif(nc, -2, 2)\n    m <- sapply(1:nc, function(i)\n    {\n        g * betas[i] + rnorm(n)\n    })\n    # for each individual sample cell type proportions\n    cellprop <- sapply(1:n, function(x) {a <- runif(nc); a/sum(a)}) %>% t()\n    cpn <- cellprop_noise(cellprop, noise_sigma)\n    # weighted sum\n    M <- (scale(m) * cellprop) %>% rowSums\n    res <- sapply(1:nc, function(i)\n    {\n      summary(lm(M ~ g * cpn[,i]))$coef[4,1]\n    })\n    return(tibble(res, betas))\n}\n\no2 <- lapply(1:1000, function(i) {\n    s <- sample(c(0, 0.05, 0.1), 1)\n    sim2(5, 10000, s) %>% mutate(sim=i, s=s)\n}) %>% bind_rows()\no2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5,000 × 4\n        res  betas   sim     s\n      <dbl>  <dbl> <int> <dbl>\n 1  1.32     0.524     1  0.05\n 2 -0.106   -0.890     1  0.05\n 3 -0.231   -0.982     1  0.05\n 4 -0.480   -1.77      1  0.05\n 5 -0.482   -1.48      1  0.05\n 6  0.102    0.141     2  0.05\n 7 -0.00435  0.107     2  0.05\n 8 -0.738   -0.825     2  0.05\n 9 -0.160   -0.188     2  0.05\n10  0.787    0.834     2  0.05\n# … with 4,990 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(o2, aes(x=betas, y=res)) +\ngeom_point() +\ngeom_smooth() +\ngeom_abline(colour=\"red\") +\nfacet_wrap(~ s)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'gam' and formula = 'y ~ s(x, bs = \"cs\")'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nNoisy estimates of cell type proportions will lead to attenuated effect estimates\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.1 Patched (2022-09-06 r82817)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Monterey 12.6.2\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] ggplot2_3.4.0 dplyr_1.0.10 \n\nloaded via a namespace (and not attached):\n [1] pillar_1.8.1      compiler_4.2.1    tools_4.2.1       digest_0.6.31    \n [5] jsonlite_1.8.4    evaluate_0.19     lifecycle_1.0.3   tibble_3.1.8     \n [9] gtable_0.3.1      nlme_3.1-158      lattice_0.20-45   mgcv_1.8-40      \n[13] pkgconfig_2.0.3   rlang_1.0.6       Matrix_1.4-1      DBI_1.1.3        \n[17] cli_3.5.0         yaml_2.3.6        xfun_0.36         fastmap_1.1.0    \n[21] withr_2.5.0       stringr_1.5.0     knitr_1.41        generics_0.1.3   \n[25] vctrs_0.5.1       htmlwidgets_1.5.4 grid_4.2.1        tidyselect_1.2.0 \n[29] glue_1.6.2        R6_2.5.1          fansi_1.0.3       rmarkdown_2.16   \n[33] farver_2.1.1      magrittr_2.0.3    scales_1.2.1      htmltools_0.5.4  \n[37] splines_4.2.1     assertthat_0.2.1  colorspace_2.0-3  labeling_0.4.2   \n[41] utf8_1.2.2        stringi_1.7.8     munsell_0.5.0    \n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}