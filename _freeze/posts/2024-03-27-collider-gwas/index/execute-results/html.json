{
  "hash": "420d9e8d68bb1cb77213ee06339233b5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Collider bias due to batch in GWAS\"\nauthor: Gibran Hemani\ndate: \"2024-03-27\"\ncategories: []\n---\n\n\n## Background\n\nSuppose study is split into two batches, where one is enriched for ADHD cases. Given the PRS assoc with ADHD before and after adjusting for batch, we can explore the magnitude of collider bias that might arise due to adjusting for batch.\n\nModel:\n\n```\ng -> x <- y\n```\n\nwhere `x` is a case/control variable, and is split into two batches, and one batch is enriched for cases.\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n\nBasic data generating model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfn <- function(n, af, bgx, px, byx, nbatch) {\n    g <- rbinom(n, 2, af)\n    y <- rnorm(n)\n    x <- rbinom(n, 1, plogis(-1 + scale(g) * bgx + y * byx + rnorm(n)))\n    bp <- x\n    bp[x == 1] <- px\n    bp[x == 0] <- 1-px\n    ind <- sample(1:n, nbatch, replace=FALSE, prob=bp)\n    b <- as.numeric(1:n %in% ind)\n\n    mod <- function(f) {\n        o <- summary(lm(as.formula(f))) %>%\n        coef() %>% as_tibble() %>% slice_tail(n=1)\n        names(o) <- c(\"b\", \"se\", \"tval\", \"pval\")\n        o$model <- f\n        o\n    }\n\n    bind_rows(\n        mod(\"y ~ g\"),\n        mod(\"y ~ b + g\"),\n        mod(\"y ~ x + g\"),\n        mod(\"x ~ g\"),\n        mod(\"x ~ b + g\")\n    )\n}\n\nfn(100000, 0.4, 0.5, 0.5, 10000)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 5\n         b      se   tval  pval model    \n     <dbl>   <dbl>  <dbl> <dbl> <chr>    \n1 -0.00225 0.00459 -0.490 0.624 y ~ g    \n2 -0.00225 0.00459 -0.490 0.624 y ~ b + g\n3  0.00337 0.00276  1.22  0.222 y ~ x + g\n4 -0.00351 0.00229 -1.54  0.125 x ~ g    \n5 -0.00351 0.00229 -1.54  0.125 x ~ b + g\n```\n\n\n:::\n:::\n\n\nDefine parameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparam <- expand.grid(\n    n = 100000,\n    af = 0.4,\n    bgx = sqrt(c(0.2, 0.01)),\n    px = c(0.5, 0.9),\n    byx = seq(0, 0.9, 0.1),\n    nbatch = c(10000),\n    sim=1:10\n) %>% as_tibble()\nparam\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 400 × 7\n        n    af   bgx    px   byx nbatch   sim\n    <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> <int>\n 1 100000   0.4 0.447   0.5   0    10000     1\n 2 100000   0.4 0.1     0.5   0    10000     1\n 3 100000   0.4 0.447   0.9   0    10000     1\n 4 100000   0.4 0.1     0.9   0    10000     1\n 5 100000   0.4 0.447   0.5   0.1  10000     1\n 6 100000   0.4 0.1     0.5   0.1  10000     1\n 7 100000   0.4 0.447   0.9   0.1  10000     1\n 8 100000   0.4 0.1     0.9   0.1  10000     1\n 9 100000   0.4 0.447   0.5   0.2  10000     1\n10 100000   0.4 0.1     0.5   0.2  10000     1\n# ℹ 390 more rows\n```\n\n\n:::\n:::\n\n\nRun simulation across all parameters\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres <- lapply(1:nrow(param), \\(i) {\n    o <- fn(param$n[i], param$af[i], param$bgx[i], param$px[i], param$byx[i], param$nbatch[i])\n    bind_cols(param[i,], o)\n}) %>% bind_rows()\n```\n:::\n\n\nHow does `g->y` test statistic relate to different biases? (Should always be null)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres %>%\n    filter(model == \"y ~ b + g\") %>%\n    {\n        ggplot(., aes(x=byx, y=tval, color=as.factor(px))) +\n        geom_point() +\n        geom_smooth(method=\"lm\") +\n        facet_wrap(px ~ bgx)    \n    }\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nHow does `g->x` test statistic change when adjusting for batch across parameters?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nres %>%\n    filter(model %in% c(\"x ~ b + g\", \"x ~ g\")) %>%\n    group_by(byx, px, bgx, sim) %>%\n    summarise(bdiff = diff(b)) %>%\n    {\n        ggplot(., aes(x=byx, y=bdiff, color=as.factor(px))) +\n        geom_point() +\n        geom_smooth(method=\"lm\") +\n        facet_wrap(px ~ bgx)    \n    }\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'byx', 'px', 'bgx'. You can override using\nthe `.groups` argument.\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Summary\n\nNeed huge effects of target trait `y` on `x` (ADHD) in order to induce any sort of meaningful collider bias unless batch is composed entirely of cases.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.3.3 (2024-02-29)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.6\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] ggplot2_3.4.2 dplyr_1.1.4  \n\nloaded via a namespace (and not attached):\n [1] vctrs_0.6.5       nlme_3.1-164      cli_3.6.2         knitr_1.45       \n [5] rlang_1.1.3       xfun_0.42         generics_0.1.3    jsonlite_1.8.8   \n [9] labeling_0.4.2    glue_1.7.0        colorspace_2.1-0  htmltools_0.5.7  \n[13] scales_1.2.1      fansi_1.0.6       rmarkdown_2.26    grid_4.3.3       \n[17] munsell_0.5.0     evaluate_0.23     tibble_3.2.1      fastmap_1.1.1    \n[21] yaml_2.3.8        lifecycle_1.0.4   compiler_4.3.3    htmlwidgets_1.6.3\n[25] pkgconfig_2.0.3   mgcv_1.9-1        farver_2.1.1      lattice_0.22-5   \n[29] digest_0.6.34     R6_2.5.1          tidyselect_1.2.0  utf8_1.2.4       \n[33] splines_4.3.3     pillar_1.9.0      magrittr_2.0.3    Matrix_1.6-5     \n[37] withr_3.0.0       tools_4.3.3       gtable_0.3.3     \n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}