{
  "hash": "fecced8c4b92509cff85107997a013f7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Read write speeds\"\nauthor: Gibran Hemani\ndate: \"2024-10-28\"\ncategories: []\nexecute:\n    eval: false\n---\n\n\n## Background\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(microbenchmark)\nlibrary(data.table)\nlibrary(dplyr)\nlibrary(fst)\n\nfn <- \"/local-scratch/projects/Lifecourse-GWAS/gib/alspac/results/03/bmi_10-11.fastGWA\"\na <- data.table::fread(fn, header=TRUE) %>% as_tibble()\nv <- a %>% select(CHR, )\nss <- b %>% \nssmin <- bs\nssmin\n\n\nx <- expand.grid(\n    what = c(\"variants\", \"ss\", \"ssmin\"),\n    format = c(\"rds\", \"data.table gzip\", \"data.table txt\", \"fst\"),\n    file_size = NA,\n    read_time = NA,\n    write_time = NA\n)\n\ni <- 1\nfor(i in which(x$what == \"ss\")) {\n    message(i)\n    fn <- tempfile()\n    if(x$format[i] == \"rds\") {\n        message(\"rds\")\n        obj <- get(as.character(x$what[i]))\n        x$write_time[i] <- microbenchmark(saveRDS(obj, file=fn), times=5) %>% summary %>% as.data.frame %>% {.$median}\n        x$file_size[i] <- file.size(fn)\n        x$read_time[i] <- microbenchmark(temp <- readRDS(file=fn), times=5) %>% summary %>% as.data.frame %>% {.$median}\n    }\n    if(x$format[i] == \"data.table txt\") {\n        message(\"data.table txt\")\n        obj <- get(as.character(x$what[i]))\n        x$write_time[i] <- microbenchmark(fwrite(obj, file=fn, compress=\"none\"), times=5) %>% summary %>% as.data.frame %>% {.$median}\n        x$file_size[i] <- file.size(fn)\n        x$read_time[i] <- microbenchmark(temp <- fread(file=fn), times=5) %>% summary %>% as.data.frame %>% {.$median}\n    }\n    if(x$format[i] == \"data.table gzip\") {\n        message(\"data.table gzip\")\n        fn2 <- paste0(fn, \".gz\")\n        obj <- get(as.character(x$what[i]))\n        x$write_time[i] <- microbenchmark(fwrite(obj, file=fn2, compress=\"gzip\"), times=5) %>% summary %>% as.data.frame %>% {.$median}\n        x$file_size[i] <- file.size(fn2)\n        x$read_time[i] <- microbenchmark(temp <- fread(file=fn2), times=5) %>% summary %>% as.data.frame %>% {.$median}\n    }\n    if(x$format[i] == \"fst\") {\n        message(\"data.table fst\")\n        obj <- get(as.character(x$what[i]))\n        x$write_time[i] <- microbenchmark(write_fst(obj, path=fn, compress=100), times=5) %>% summary %>% as.data.frame %>% {.$median}\n        x$file_size[i] <- file.size(fn)\n        x$read_time[i] <- microbenchmark(temp <- read_fst(path=fn), times=5) %>% summary %>% as.data.frame %>% {.$median}\n    }\n\n}\n\n\n\n\n\n# Summary\n# - fst vs rds\n#     is twice as fast at writing and reading, but only tested on SSD. 3 seconds vs 6 seconds\n#     - it might be tricky to install for some\n#     - file sizes are about 10-20% larger\n# - fread txt for variants is comparable to rds, worth using for variants so that it's easy to read\n\n\n\n\n## Note\n# Was previously using fst but finding it can be cumbersome to install\n# So reverting to using rds as it\n\n## redundant - these are bigger than compressed files\n# writebingwas <- function(a, fn) {\n#     con <- file(fn, \"wb\")\n#     n <- nrow(a)\n#     writeBin(n, con)\n#     writeBin(a[, BETA], con)\n#     writeBin(a[, SE], con)\n#     writeBin(a[, AF1], con)\n#     writeBin(a[, N], con)\n#     close(con)\n# }\n\n# readbingwas <- function(fn) {\n#     con <- file(fn, \"rb\")\n#     n <- readBin(con, integer(), n = 1)\n#     tibble(\n#         BETA = readBin(con, numeric(), n=n),\n#         SE = readBin(con, numeric(), n=n),\n#         AF1 = readBin(con, numeric(), n=n),\n#         N = readBin(con, integer(), n=n)\n#     )\n#     close(con)\n# }\n# writebingwas(a, \"temp.bin\")\n```\n:::\n\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}