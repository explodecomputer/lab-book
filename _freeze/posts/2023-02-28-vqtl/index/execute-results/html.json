{
  "hash": "746165be00fc7c16d92fa9128a75ac66",
  "result": {
    "markdown": "---\ntitle: \"Spurious vQTL simulation\"\nauthor: Gibran Hemani\ndate: \"2023-02-28\"\ncategories: ['genetics', 'interactions', 'statistics']\n---\n\n\n## Background\n\nHow sensitive is DRM to incomplete LD in more realistic scenarios? Take a region of 1000 genomes data and choose a SNP at random to have an additive effect of some determined magnitude. We'd now determine how many SNPs in the region (i.e. with incomplete LD with the causal SNP) have evidence of vQTL using DRM or SVLM. How does genetic effect size and sample size relate to minimum p-value and number of positions with FDR < 0.05.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(data.table)\nlibrary(dplyr)\nlibrary(ggplot2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_drm <- function(g, y)\n{\n  y.i <- tapply(y, g, median, na.rm=T)\n  z.ij <- abs(y - y.i[g+1])\n  summary(lm(z.ij ~ g))$coef %>%\n    as_tibble() %>%\n    slice(2) %>%\n    mutate(method=\"drm\")\n}\n\ntest_svlm <- function(g, y)\n{\n  yres <- residuals(lm(y ~ g))^2\n  summary(lm(yres ~ g))$coefficients %>%\n    as_tibble() %>%\n    slice(n=2) %>%\n    mutate(method=\"svlm\")\n}\n```\n:::\n\n\nGet some plink data - e.g. just 1-2k SNPs from 1000 genomes European samples\n\n\n::: {.cell}\n\n```{.bash .cell-code}\n/Users/gh13047/Downloads/plink_mac_20230116/plink \\\n    --bfile /Users/gh13047/repo/opengwas-api-internal/opengwas-api/app/ld_files/EUR \\\n    --chr 22 \\\n    --recode A \\\n    --out eur22 \\\n    --from-bp 0 --to-bp 17000000\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\nPLINK v1.90b7 64-bit (16 Jan 2023)             www.cog-genomics.org/plink/1.9/\n(C) 2005-2023 Shaun Purcell, Christopher Chang   GNU General Public License v3\nLogging to eur22.log.\nOptions in effect:\n  --bfile /Users/gh13047/repo/opengwas-api-internal/opengwas-api/app/ld_files/EUR\n  --chr 22\n  --from-bp 0\n  --out eur22\n  --recode A\n  --to-bp 17000000\n\n16384 MB RAM detected; reserving 8192 MB for main workspace.\n1734 out of 8550156 variants loaded from .bim file.\n503 people (0 males, 0 females, 503 ambiguous) loaded from .fam.\nAmbiguous sex IDs written to eur22.nosex .\nUsing 1 thread (no multithreaded calculations invoked).\nBefore main variant filters, 503 founders and 0 nonfounders present.\nCalculating allele frequencies... 0%\b\b1%\b\b2%\b\b3%\b\b4%\b\b5%\b\b6%\b\b7%\b\b8%\b\b9%\b\b10%\b\b\b11%\b\b\b12%\b\b\b13%\b\b\b14%\b\b\b15%\b\b\b16%\b\b\b17%\b\b\b18%\b\b\b19%\b\b\b20%\b\b\b21%\b\b\b22%\b\b\b23%\b\b\b24%\b\b\b25%\b\b\b26%\b\b\b27%\b\b\b28%\b\b\b29%\b\b\b30%\b\b\b31%\b\b\b32%\b\b\b33%\b\b\b34%\b\b\b35%\b\b\b36%\b\b\b37%\b\b\b38%\b\b\b39%\b\b\b40%\b\b\b41%\b\b\b42%\b\b\b43%\b\b\b44%\b\b\b45%\b\b\b46%\b\b\b47%\b\b\b48%\b\b\b49%\b\b\b50%\b\b\b51%\b\b\b52%\b\b\b53%\b\b\b54%\b\b\b55%\b\b\b56%\b\b\b57%\b\b\b58%\b\b\b59%\b\b\b60%\b\b\b61%\b\b\b62%\b\b\b63%\b\b\b64%\b\b\b65%\b\b\b66%\b\b\b67%\b\b\b68%\b\b\b69%\b\b\b70%\b\b\b71%\b\b\b72%\b\b\b73%\b\b\b74%\b\b\b75%\b\b\b76%\b\b\b77%\b\b\b78%\b\b\b79%\b\b\b80%\b\b\b81%\b\b\b82%\b\b\b83%\b\b\b84%\b\b\b85%\b\b\b86%\b\b\b87%\b\b\b88%\b\b\b89%\b\b\b90%\b\b\b91%\b\b\b92%\b\b\b93%\b\b\b94%\b\b\b95%\b\b\b96%\b\b\b97%\b\b\b98%\b\b\b99%\b\b\b\b done.\nTotal genotyping rate is in [0.9999995, 1).\n1734 variants and 503 people pass filters and QC.\nNote: No phenotypes present.\n--recode A to eur22.raw ... 0%\b\b1%\b\b2%\b\b3%\b\b4%\b\b5%\b\b6%\b\b7%\b\b8%\b\b9%\b\b10%\b\b\b11%\b\b\b12%\b\b\b13%\b\b\b14%\b\b\b15%\b\b\b16%\b\b\b17%\b\b\b18%\b\b\b19%\b\b\b20%\b\b\b21%\b\b\b22%\b\b\b23%\b\b\b24%\b\b\b25%\b\b\b26%\b\b\b27%\b\b\b28%\b\b\b29%\b\b\b30%\b\b\b31%\b\b\b32%\b\b\b33%\b\b\b34%\b\b\b35%\b\b\b36%\b\b\b37%\b\b\b38%\b\b\b39%\b\b\b40%\b\b\b41%\b\b\b42%\b\b\b43%\b\b\b44%\b\b\b45%\b\b\b46%\b\b\b47%\b\b\b48%\b\b\b49%\b\b\b50%\b\b\b51%\b\b\b52%\b\b\b53%\b\b\b54%\b\b\b55%\b\b\b56%\b\b\b57%\b\b\b58%\b\b\b59%\b\b\b60%\b\b\b61%\b\b\b62%\b\b\b63%\b\b\b64%\b\b\b65%\b\b\b66%\b\b\b67%\b\b\b68%\b\b\b69%\b\b\b70%\b\b\b71%\b\b\b72%\b\b\b73%\b\b\b74%\b\b\b75%\b\b\b76%\b\b\b77%\b\b\b78%\b\b\b79%\b\b\b80%\b\b\b81%\b\b\b82%\b\b\b83%\b\b\b84%\b\b\b85%\b\b\b86%\b\b\b87%\b\b\b88%\b\b\b89%\b\b\b90%\b\b\b91%\b\b\b92%\b\b\b93%\b\b\b94%\b\b\b95%\b\b\b96%\b\b\b97%\b\b\b98%\b\b\b99%\b\b\bdone.\n```\n:::\n:::\n\n\nRead in genotype data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngeno <- fread(\"eur22.raw\")\nfam <- geno[,1:6]\ngeno <- as.matrix(geno[,-c(1:6)])\ngeno[1:10,1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      rs587616822_G rs62224609_C rs4965031_A rs587646183_C rs139918843_C\n [1,]             0            0           1             0             0\n [2,]             0            1           0             0             0\n [3,]             0            1           0             0             0\n [4,]             0            0           0             0             0\n [5,]             0            0           0             0             0\n [6,]             0            1           0             0             0\n [7,]             0            0           1             0             0\n [8,]             0            0           0             0             0\n [9,]             0            1           0             0             0\n[10,]             0            0           1             0             0\n      rs376238049_T rs200777521_A rs587701155_A rs80167676_T rs915675_A\n [1,]             0             0             0            0          1\n [2,]             1             0             0            0          1\n [3,]             1             0             0            0          1\n [4,]             0             0             0            0          0\n [5,]             0             0             0            0          0\n [6,]             1             0             0            0          1\n [7,]             0             0             1            0          1\n [8,]             0             0             0            0          1\n [9,]             0             1             0            1          0\n[10,]             0             0             0            0          0\n```\n:::\n\n```{.r .cell-code}\ndim(geno)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  503 1734\n```\n:::\n:::\n\n\nTest DRM on each SNP in region for varying sample sizes and additive variance explained in the region\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsim <- function(rsq, geno, n)\n{\n  i <- sample(1:ncol(geno), 1)\n  y <- as.numeric(scale(geno[,i])) * sqrt(rsq) + rnorm(nrow(geno), 0, sqrt(1-rsq))\n  res <- lapply(1:ncol(geno), function(i)\n  {\n    bind_rows(\n        test_drm(geno[1:n,i], y[1:n]),\n        test_svlm(geno[1:n,i], y[1:n])\n    )\n  }) %>% bind_rows()\n\n  res %>% \n    group_by(method) %>%\n    mutate(fdr = p.adjust(`Pr(>|t|)`, \"fdr\")) %>%\n    summarise(\n        minp = min(`Pr(>|t|)`, na.rm=T),\n        nfdr = sum(fdr < 0.05, na.rm=T)\n        ) %>%\n    mutate(rsq = rsq, n = n) %>%\n    ungroup()\n}\n\nparam <- expand.grid(\n  rsq = seq(0, 1, by=0.02),\n  n = c(250, 500)\n)\no <- lapply(1:nrow(param), function(i) {\n  sim(param$rsq[i], geno, param$n[i])\n}) %>% bind_rows()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(o, aes(x=rsq, y=nfdr)) +\ngeom_point(aes(colour=as.factor(n))) +\ngeom_smooth(aes(colour=as.factor(n))) +\nfacet_grid(method ~ .)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(o, aes(x=rsq, y=-log10(minp))) +\ngeom_point(aes(colour=as.factor(n))) +\ngeom_smooth(aes(colour=as.factor(n))) +\nfacet_grid(method ~ .)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## Summary\n\n- SVLM and DGLM suffer equally from the issue\n- The problem is likely a function of F statistic and LD - i.e. as sample sizes get larger, smaller effects additive become more relevant\n- With n=500 additive effect of rsq = 0.1 is enough to generate a spurious significant vQTL\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunlink(\"eur22*\")\n```\n:::\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.1 Patched (2022-09-06 r82817)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Monterey 12.6.2\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] ggplot2_3.4.0     dplyr_1.0.10      data.table_1.14.2 glue_1.6.2       \n\nloaded via a namespace (and not attached):\n [1] pillar_1.8.1      compiler_4.2.1    tools_4.2.1       digest_0.6.31    \n [5] lattice_0.20-45   nlme_3.1-158      jsonlite_1.8.4    evaluate_0.19    \n [9] lifecycle_1.0.3   tibble_3.1.8      gtable_0.3.1      mgcv_1.8-40      \n[13] pkgconfig_2.0.3   rlang_1.0.6       Matrix_1.5-3      cli_3.5.0        \n[17] DBI_1.1.3         yaml_2.3.6        xfun_0.36         fastmap_1.1.0    \n[21] withr_2.5.0       stringr_1.5.0     knitr_1.41        generics_0.1.3   \n[25] vctrs_0.5.1       htmlwidgets_1.5.4 grid_4.2.1        tidyselect_1.2.0 \n[29] R6_2.5.1          fansi_1.0.3       rmarkdown_2.16    farver_2.1.1     \n[33] magrittr_2.0.3    scales_1.2.1      htmltools_0.5.4   splines_4.2.1    \n[37] assertthat_0.2.1  colorspace_2.0-3  labeling_0.4.2    utf8_1.2.2       \n[41] stringi_1.7.8     munsell_0.5.0    \n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}