{
  "hash": "93893899ff166beb251f41e757966c1c",
  "result": {
    "markdown": "---\ntitle: \"MR and imperfect clumping\"\nauthor: Gibran Hemani\ndate: \"2023-07-13\"\ncategories: []\n---\n\n\n## Background\n\n4000 instruments for educational attainment using clumping r2 = 0.1, and se doubles when using r2 = 0.001.\n\nThat smaller standard error is either due to the R2 in the exposure being higher or the non-independence of effects artificially increasing precision, or a mixture of both.\n\nSo the question is the impact of the latter â€“ if we have some true correlation structure with realistic F stats at a specific locus, and then we try to clump at r2 = 0.001 vs 0.1, how many instruments do we retain (it should be 1) and if more than 1, what is that impact on the standard error\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(simulateGP)\nlibrary(TwoSampleMR)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nTwoSampleMR version 0.5.7 \n[>] New: Option to use non-European LD reference panels for clumping etc\n[>] Some studies temporarily quarantined to verify effect allele\n[>] See news(package='TwoSampleMR') and https://gwas.mrcieu.ac.uk for further details\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'TwoSampleMR'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:simulateGP':\n\n    allele_frequency, contingency, get_population_allele_frequency\n```\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\nlibrary(ggplot2)\n```\n:::\n\n\nSimulate causal snp g + another that is correlated with it\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 100000\ng <- correlated_binomial(n, p1=0.5, p2=0.5, rho=sqrt(0.1))\n# x caused by just snp 1\nx <- g[,1] * 0.5 + rnorm(n)\ny <- x * 0.5 + rnorm(n)\n\n# MR using both SNPs, treating as if they are independent\nget_effs(x, y, g) %>% mr(method=\"mr_ivw\") %>% str\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nAnalysing 'X' on 'Y'\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t1 obs. of  9 variables:\n $ id.exposure: chr \"X\"\n $ id.outcome : chr \"Y\"\n $ outcome    : chr \"Y\"\n $ exposure   : chr \"X\"\n $ method     : chr \"Inverse variance weighted\"\n $ nsnp       : int 2\n $ b          : num 0.497\n $ se         : num 0.00956\n $ pval       : num 0\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# MR using just the causal SNP\nget_effs(x, y, g[,1, drop=F]) %>% mr(method=c(\"mr_ivw\", \"mr_wald_ratio\")) %>% str\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nAnalysing 'X' on 'Y'\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t1 obs. of  9 variables:\n $ id.exposure: chr \"X\"\n $ id.outcome : chr \"Y\"\n $ outcome    : chr \"Y\"\n $ exposure   : chr \"X\"\n $ method     : chr \"Wald ratio\"\n $ nsnp       : num 1\n $ b          : num 0.496\n $ se         : num 0.0101\n $ pval       : num 0\n```\n:::\n:::\n\n\nThere's hardly any difference in the SE here. Try over a range of scenarios\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparam <- expand.grid(\n    r2=seq(0, 1, by=0.02),\n    bgx=seq(0,1, by=0.2),\n    bxy=seq(0,1, by=0.2),\n    n=100000\n)\nparam$sim <- 1:nrow(param)\ndim(param)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1836    5\n```\n:::\n\n```{.r .cell-code}\nres <- map(1:nrow(param), \\(i){\n    g <- correlated_binomial(param$n[i], p1=0.5, p2=0.5, rho=sqrt(param$r2[i]))\n    # x caused by just snp 1\n    x <- g[,1] * param$bgx[i] + rnorm(n)\n    y <- x * param$bxy[i] + rnorm(n)\n\n    bind_rows(\n        get_effs(x, y, g) %>% {suppressMessages(mr(., method=\"mr_ivw\"))},\n        get_effs(x, y, g[,1, drop=F]) %>% {suppressMessages(mr(., method=\"mr_wald_ratio\"))}\n    ) %>% mutate(sim=param$sim[i]) %>% return()\n}) %>% bind_rows %>% inner_join(param, ., by=\"sim\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in summary.lm(stats::lm(b_out ~ -1 + b_exp, weights = 1/se_out^2)):\nessentially perfect fit: summary may be unreliable\n```\n:::\n:::\n\n\nStandard errors across all scenarios\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(res, aes(x=r2, y=se)) +\ngeom_point(aes(colour=as.factor(nsnp))) +\ngeom_line(aes(colour=as.factor(nsnp))) +\nfacet_grid(bgx ~ bxy, labeller=label_both, scale=\"free_y\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nBias across all scenarios:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(res, aes(x=r2, y=b)) +\ngeom_point(aes(colour=as.factor(nsnp))) +\ngeom_line(aes(colour=as.factor(nsnp))) +\nfacet_grid(bgx ~ bxy, labeller=label_both)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\nLook at just one\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(res %>% filter(bgx == 0.2, bxy == 0.2), aes(x=r2, y=se)) +\ngeom_point(aes(colour=as.factor(nsnp))) +\ngeom_line(aes(colour=as.factor(nsnp))) +\nfacet_grid(bgx ~ bxy, labeller=label_both, scale=\"free_y\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## Summary\n\n- Relaxed r2 e.g. from 0 to 0.1 doesn't seem to have a huge impact on standard errors\n- In the one SNP situation relaxed r2 has no impact on bias, and could only plausibly change things under substantial heterogeneity which correlates with overrepresentation.\n- More realistic simulations would look at whether this changes when the p-value at the second locus is very large, and would also look at the probability of erroneously keeping multiple loci for a single causal variant\n- Some instability in SEs when correlated SNPs used\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.3.0 (2023-04-21)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Monterey 12.6.2\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/Rome\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] ggplot2_3.4.2     purrr_1.0.1       TwoSampleMR_0.5.7 simulateGP_0.1.2 \n[5] dplyr_1.1.2      \n\nloaded via a namespace (and not attached):\n [1] vctrs_0.6.2       cli_3.6.1         knitr_1.43        rlang_1.1.1      \n [5] xfun_0.39         generics_0.1.3    jsonlite_1.8.5    labeling_0.4.2   \n [9] glue_1.6.2        colorspace_2.1-0  plyr_1.8.8        htmltools_0.5.5  \n[13] scales_1.2.1      fansi_1.0.4       rmarkdown_2.22    grid_4.3.0       \n[17] munsell_0.5.0     evaluate_0.21     tibble_3.2.1      fastmap_1.1.1    \n[21] yaml_2.3.7        lifecycle_1.0.3   compiler_4.3.0    Rcpp_1.0.10      \n[25] htmlwidgets_1.6.2 pkgconfig_2.0.3   rstudioapi_0.14   farver_2.1.1     \n[29] digest_0.6.31     R6_2.5.1          tidyselect_1.2.0  utf8_1.2.3       \n[33] pillar_1.9.0      magrittr_2.0.3    withr_2.5.0       gtable_0.3.3     \n[37] tools_4.3.0      \n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}