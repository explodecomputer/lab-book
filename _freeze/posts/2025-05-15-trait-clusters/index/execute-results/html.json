{
  "hash": "341d1a882c7417cdb40de047f8ac5c1f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Simulate trait clusters\"\nauthor: Gibran Hemani\ndate: \"2025-05-15\"\ncategories: []\n---\n\n\n## Background\n\nNeed a function that will create GWAS summary statistics for multiple traits\n- There is a set of underlying latent traits\n- There may be pleiotropic or causal relationships between the latent traits\n- A number of observed traits arise from each latent trait\n\n## Sim\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(simulateGP)\nlibrary(GWASBrewer)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nG_from_df <- function(df) {\n    stopifnot(inherits(df, \"data.frame\"))\n    stopifnot(nrow(df) >0)\n    stopifnot(all(c(\"i\", \"j\", \"eff\") %in% names(df)))\n    nodes <- unique(c(df$i, df$j))\n    message(nrow(df), \" causal relationships specified amongst \", length(nodes), \" traits\")\n    G <- matrix(0, length(nodes), length(nodes))\n    rownames(G) <- nodes\n    colnames(G) <- nodes\n    for(x in 1:nrow(df)) {\n        G[df$i[x], df$j[x]] <- df$eff[x]\n    }\n    return(G)\n}\n\n\n#' @param latent_causal_matrix For L latent traits, the causal relationships between them. Should be a DAG\n#' @param pleio_min Mimumum fraction of h2 due to pleiotropy. How deviant should proximal traits be to the underlying latent trait? Proximal traits will have the same h2 as the latent trait, but some fraction of that h2 will be from other variants. \n#' @param pleio_max Maximum fraction of h2 due to pleiotropy\n#' @param n_proximal_traits Vector of length L saying how many traits for each latent trait\n#' @param nid Vector of size sum(n_proximal_traits). Sample size of each proximal trait\n#' @param nsnp Vector of size L saying how many SNPs for each latent trait\n#' @param h2 Vector of size L saying variance explained in proximal trait by SNPs\npie_hat_sim <- function(latent_causal_matrix, pleio_min, pleio_max, n_proximal_traits, nid, nsnp, h2) {\n    n_latent <- nrow(latent_causal_matrix)\n    a <- lapply(1:n_latent, \\(trait) {\n        latent_names <- unique(c(latent_causal_matrix$i, latent_causal_matrix$j))\n        tibble(\n            i = latent_names[trait], \n            j = paste0(latent_names[trait], 1:n_proximal_traits[trait]), \n            eff=runif(n_proximal_traits[trait], 1-pleio_max, 1-pleio_min),\n            pi = 0.1,\n            h2 = h2[trait]\n        )\n    }) %>% bind_rows()\n\n    J <- sum(nsnp)\n    latent_causal_matrix$pi <- nsnp / J\n    latent_causal_matrix$h2 <- h2\n\n    mat <- G_from_df(bind_rows(latent_causal_matrix, a))\n\n    o <- sim_mv(\n        G = mat,\n        N = c(rep(500000, n_latent), nid), \n        J = sum(nsnp),\n        h2 = c(latent_causal_matrix$h2, a$h2),\n        pi = c(latent_causal_matrix$pi, a$pi),\n        est_s = TRUE,\n        af = function(n) {runif(n, 0.01, 0.99)}\n    )\n    dat <- lapply(1:ncol(o$beta_hat), \\(i) {\n        as_tibble(o$snp_info) %>%\n        mutate(\n            trait = colnames(o$direct_trait_effects)[i],\n            bhat = o$beta_hat[,i],\n            se = o$se_beta_hat[,i],\n            pval = pnorm(abs(bhat)/se, low=F)\n        )\n    }) %>% bind_rows()\n    return(dat)\n}\n\nplot_pair <- function(dats, exposure, outcome) {\n    e <- subset(dats, pval < 5e-8 & trait == exposure)\n    o <- subset(dats, SNP %in% e$SNP & trait == outcome)\n    tibble(eb=e$bhat, ese=e$se, ob=o$bhat, ose=o$se) %>%\n    ggplot(aes(x=eb, y=ob)) +\n    geom_errorbar(aes(ymin=ob - ose * 1.96, ymax=ob+ose*1.96), colour=\"grey\") +\n    geom_errorbarh(aes(xmin=eb - ese * 1.96, xmax=eb+ese*1.96), colour=\"grey\") +\n    geom_smooth(method=\"lm\") +\n    geom_point()\n}\n```\n:::\n\n\n\nUse the simulation function to generate a dataset of summary statistics for each latent trait plus all the proxy traits.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Specify the causal relationship amongst the latent traits\n# Every latent trait must be included in this matrix\n# If a latent trait isn't causally related to anything else just give it a 0 causal effect e.g. for Z here\nlatent_causal_matrix <- dplyr::tribble(\n    ~i, ~j, ~eff,\n    \"Y\", \"X\", 0.25,\n    \"X\", \"A\", 0.24,\n    \"Y\", \"A\", 0.34,\n    \"Z\", \"A\", 0\n)\ndat <- pie_hat_sim(\n    latent_causal_matrix,\n    pleio_min = 0.1,\n    pleio_max = 0.2,\n    n_proximal_traits = c(3, 5, 10, 8),\n    nid = runif(3+5+10+8, 50000, 150000), \n    nsnp = c(200, 250, 300, 200), \n    h2 = c(0.08, 0.1, 0.1, 0.07)\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n30 causal relationships specified amongst 30 traits\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSNP effects provided for 950 SNPs and 30 traits.\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [28,500 Ã— 6] (S3: tbl_df/tbl/data.frame)\n $ SNP  : int [1:28500] 1 2 3 4 5 6 7 8 9 10 ...\n $ AF   : num [1:28500] 0.054 0.647 0.505 0.827 0.845 ...\n $ trait: chr [1:28500] \"Y\" \"Y\" \"Y\" \"Y\" ...\n $ bhat : num [1:28500] 0.00258 0.0179 -0.00121 -0.00651 -0.00249 ...\n $ se   : num [1:28500] 0.00443 0.00209 0.002 0.00264 0.00276 ...\n $ pval : num [1:28500] 2.80e-01 5.92e-18 2.73e-01 6.83e-03 1.84e-01 ...\n```\n\n\n:::\n:::\n\n\ne.g. Plot the betas for one proximal trait against another\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_pair(dat, \"Y1\", \"A2\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nPlot for different proximal traits for the same latent trait\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_pair(dat, \"Z1\", \"Z8\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nSimulate again but with no pleiotropy\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlatent_causal_matrix <- dplyr::tribble(\n    ~i, ~j, ~eff,\n    \"Y\", \"X\", 0.25,\n    \"X\", \"A\", 0.24,\n    \"Y\", \"A\", 0.34\n)\ndat <- pie_hat_sim(\n    latent_causal_matrix,\n    pleio_min = 0,\n    pleio_max = 0,\n    n_proximal_traits = c(3, 5, 10),\n    nid = runif(3+5+10, 50000, 150000), \n    nsnp = c(200, 250, 300), \n    h2 = c(0.08, 0.1, 0.1)\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n21 causal relationships specified amongst 21 traits\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSNP effects provided for 750 SNPs and 21 traits.\n```\n\n\n:::\n\n```{.r .cell-code}\nplot_pair(dat, \"Y1\", \"Y3\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.5.0 (2025-04-11)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sonoma 14.6.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] ggplot2_3.5.2         dplyr_1.1.4           GWASBrewer_0.3.0.0233\n[4] simulateGP_0.1.3     \n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-3       gtable_0.3.6       jsonlite_2.0.0     compiler_4.5.0    \n [5] tidyselect_1.2.1   Rcpp_1.0.14        tidyr_1.3.1        splines_4.5.0     \n [9] scales_1.4.0       yaml_2.3.10        fastmap_1.2.0      lattice_0.22-7    \n[13] R6_2.6.1           labeling_0.4.3     generics_0.1.3     knitr_1.50        \n[17] htmlwidgets_1.6.4  MASS_7.3-65        tibble_3.2.1       pillar_1.10.2     \n[21] RColorBrewer_1.1-3 rlang_1.1.6        xfun_0.52          cli_3.6.5         \n[25] withr_3.0.2        magrittr_2.0.3     mgcv_1.9-3         digest_0.6.37     \n[29] grid_4.5.0         nlme_3.1-168       lifecycle_1.0.4    vctrs_0.6.5       \n[33] evaluate_1.0.3     glue_1.8.0         farver_2.1.2       rmarkdown_2.29    \n[37] purrr_1.0.4        tools_4.5.0        pkgconfig_2.0.3    htmltools_0.5.8.1 \n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}