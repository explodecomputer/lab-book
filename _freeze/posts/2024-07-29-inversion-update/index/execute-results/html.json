{
  "hash": "fc55f1c4aa0e61b09c7a6315e848f21d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Removing variables from an inverted matrix\"\nauthor: Gibran Hemani\ndate: \"2024-07-29\"\ncategories: []\n---\n\n\n## Background\n\nRemove variables from an inverted matrix\n\nFrom https://stats.stackexchange.com/questions/450146/updating-the-inverse-covariance-matrix-after-deleting-the-i-th-column-and-row-of/450186#450186 :\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninverse.update <- function(x, i) {\n  a <- x[-i,-i, drop=FALSE]\n  b <- x[-i,i, drop=FALSE]\n  c <- x[i,-i, drop=FALSE]\n  d <- x[i,i]\n  a - b %*% solve(d) %*% c # For production code, should throw an error when d is 0.\n}\n#\n# Example.\n#\nA <- matrix(c(2,-1,0, -1,2,-1, 0,-1,2), 3)\nA.inv <- solve(A)\ni <- 2\n(x.1 <- solve(A[-i,-i]))           # The desired result, directly obtained\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2]\n[1,]  0.5  0.0\n[2,]  0.0  0.5\n```\n\n\n:::\n\n```{.r .cell-code}\n(x.0 <- inverse.update(A.inv, i))  # The result via an update\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2]\n[1,]  0.5  0.0\n[2,]  0.0  0.5\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 100\np <- qr.Q(qr(matrix(rnorm(n^2), n)))\nSigma <- crossprod(p, p*(n:1))\nSigma[1:10,1:10]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            [,1]       [,2]       [,3]       [,4]       [,5]       [,6]\n [1,] 57.9385521  0.3208281 -0.4977199 -1.0868291 -1.6627980  1.3160580\n [2,]  0.3208281 52.4695149 -0.9527482 -0.3403789 -2.0292978 -0.9617932\n [3,] -0.4977199 -0.9527482 52.5479548 -3.9389601 -0.3454971 -0.5248873\n [4,] -1.0868291 -0.3403789 -3.9389601 55.6025900  5.4163401  3.5721138\n [5,] -1.6627980 -2.0292978 -0.3454971  5.4163401 56.2864414  4.2190419\n [6,]  1.3160580 -0.9617932 -0.5248873  3.5721138  4.2190419 50.0241607\n [7,]  2.2595601  2.0683065  2.2184804  2.4608634  0.1627784  1.5666412\n [8,]  2.6967693 -1.7750383  0.3179390 -0.7733417 -0.7389027 -0.3089740\n [9,] -0.4383502 -0.9908480  1.1284561 -2.3302970  0.9202238 -1.2106191\n[10,] -1.3535960  3.2367953  1.3182395  0.1211423 -3.2249309  1.3989303\n            [,7]       [,8]       [,9]      [,10]\n [1,]  2.2595601  2.6967693 -0.4383502 -1.3535960\n [2,]  2.0683065 -1.7750383 -0.9908480  3.2367953\n [3,]  2.2184804  0.3179390  1.1284561  1.3182395\n [4,]  2.4608634 -0.7733417 -2.3302970  0.1211423\n [5,]  0.1627784 -0.7389027  0.9202238 -3.2249309\n [6,]  1.5666412 -0.3089740 -1.2106191  1.3989303\n [7,] 49.9562189  3.2698375 -3.2764609 -2.2851399\n [8,]  3.2698375 48.6555301  4.8965876 -3.3894722\n [9,] -3.2764609  4.8965876 51.4523676  2.5008322\n[10,] -2.2851399 -3.3894722  2.5008322 48.0365556\n```\n\n\n:::\n:::\n\n\nWith just one variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSigma.inv <- solve(Sigma)\n\nto_remove <- 10\na <- solve(Sigma[-to_remove,-to_remove])\nb <- inverse.update(Sigma.inv, to_remove)\n\ncor(c(a),c(b))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\nWith mutiple variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nto_remove <- sample(1:100, 10)\na <- solve(Sigma[-to_remove,-to_remove])\nb <- inverse.update(Sigma.inv, to_remove)\ncor(c(a), c(b))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n## Time complexity\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfn <- function(n, nrem) {\n    p <- qr.Q(qr(matrix(rnorm(n^2), n)))\n    Sigma <- crossprod(p, p*(n:1))\n    Sigma.inv <- solve(Sigma)\n    to_remove <- sample(1:n, nrem, replace=FALSE)\n    t1 <- Sys.time()\n    a <- solve(Sigma[-to_remove,-to_remove])\n    at <- Sys.time() - t1\n\n    t1 <- Sys.time()\n    b <- inverse.update(Sigma.inv, to_remove)\n    bt <- Sys.time() - t1\n    stopifnot(all.equal(a, b))\n    return(c(at, bt))\n}\n\nfn(1000, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nTime differences in secs\n[1] 0.631145954 0.007416964\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nparam <- expand.grid(\n    n = 300,\n    nrem = seq(1, 290, 10),\n    t1=NA,\n    t2=NA\n)\nset.seed(100)\nres <- lapply(1:nrow(param), function(i) {\n    message(i)\n    p <- param[i,]\n    a <- fn(p$n, p$nrem)\n\n    p$t1 <- a[1]\n    p$t2 <- a[2]\n    return(p)\n}) %>% bind_rows()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n3\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n4\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n5\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n6\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n7\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n8\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n9\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n10\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n11\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n12\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n13\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n14\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n15\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n16\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n17\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n18\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n19\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n20\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n21\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n22\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n23\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n24\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n25\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n26\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n27\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n28\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n29\n```\n\n\n:::\n\n```{.r .cell-code}\nres$frac_rem <- res$nrem / res$n\nres$frac_time <- as.numeric(res$t2) / as.numeric(res$t1)\n\nplot(res$frac_rem, log(res$frac_time))\nabline(1,0)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\nIf you are removing more than 50% of the matrix then this method probably won't help with speed.\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.1 (2024-06-14)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Ventura 13.6\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4\n\nloaded via a namespace (and not attached):\n [1] digest_0.6.35     utf8_1.2.4        R6_2.5.1          fastmap_1.2.0    \n [5] tidyselect_1.2.1  xfun_0.44         magrittr_2.0.3    glue_1.7.0       \n [9] tibble_3.2.1      knitr_1.47        pkgconfig_2.0.3   htmltools_0.5.8.1\n[13] rmarkdown_2.27    generics_0.1.3    lifecycle_1.0.4   cli_3.6.2        \n[17] fansi_1.0.6       vctrs_0.6.5       compiler_4.4.1    tools_4.4.1      \n[21] pillar_1.9.0      evaluate_0.23     yaml_2.3.8        rlang_1.1.3      \n[25] jsonlite_1.8.8    htmlwidgets_1.6.4\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}