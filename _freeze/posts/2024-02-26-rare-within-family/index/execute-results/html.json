{
  "hash": "ce64cd4185cfb7178bc9f9ad029140dc",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Do p-values deflate when looking at rare variants in families?\"\nauthor: Gibran Hemani\ndate: \"2024-02-26\"\ncategories: []\n---\n\n\n## Background\n\nDo p-values deflate when the variant is rare?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidyr)\nlibrary(ggplot2)\n```\n:::\n\n\nFamily simulation function\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# adapted from https://github.com/MRCIEU/mrtwin_power/blob/master/scripts/sib_mr_functions.r\n# 3 sibs per family\n# skewed phenotype\nmake_families <- function(af, nfam) {\n\tnsnp <- length(af)\n\tdads <- matrix(0, nfam, nsnp)\n\tmums <- matrix(0, nfam, nsnp)\n\tsibs1 <- matrix(0, nfam, nsnp)\n\tsibs2 <- matrix(0, nfam, nsnp)\n    sibs3 <- matrix(0, nfam, nsnp)\n\tfor(i in 1:nsnp)\n\t{\n\t\tdad1 <- rbinom(nfam, 1, af[i]) + 1\n\t\tdad2 <- (rbinom(nfam, 1, af[i]) + 1) * -1\n\t\tmum1 <- rbinom(nfam, 1, af[i]) + 1\n\t\tmum2 <- (rbinom(nfam, 1, af[i]) + 1) * -1\n\n\t\tdadindex <- sample(c(TRUE, FALSE), nfam, replace=TRUE)\n\t\tdadh <- rep(NA, nfam)\n\t\tdadh[dadindex] <- dad1[dadindex]\n\t\tdadh[!dadindex] <- dad2[!dadindex]\n\n\t\tmumindex <- sample(c(TRUE, FALSE), nfam, replace=TRUE)\n\t\tmumh <- rep(NA, nfam)\n\t\tmumh[mumindex] <- mum1[mumindex]\n\t\tmumh[!mumindex] <- mum2[!mumindex]\n\n\t\tsib1 <- cbind(dadh, mumh)\n\n\t\tdadindex <- sample(c(TRUE, FALSE), nfam, replace=TRUE)\n\t\tdadh <- rep(NA, nfam)\n\t\tdadh[dadindex] <- dad1[dadindex]\n\t\tdadh[!dadindex] <- dad2[!dadindex]\n\n\t\tmumindex <- sample(c(TRUE, FALSE), nfam, replace=TRUE)\n\t\tmumh <- rep(NA, nfam)\n\t\tmumh[mumindex] <- mum1[mumindex]\n\t\tmumh[!mumindex] <- mum2[!mumindex]\n\n\t\tsib2 <- cbind(dadh, mumh)\n\n\t\tdadindex <- sample(c(TRUE, FALSE), nfam, replace=TRUE)\n\t\tdadh <- rep(NA, nfam)\n\t\tdadh[dadindex] <- dad1[dadindex]\n\t\tdadh[!dadindex] <- dad2[!dadindex]\n\n\t\tmumindex <- sample(c(TRUE, FALSE), nfam, replace=TRUE)\n\t\tmumh <- rep(NA, nfam)\n\t\tmumh[mumindex] <- mum1[mumindex]\n\t\tmumh[!mumindex] <- mum2[!mumindex]\n\n\t\tsib3 <- cbind(dadh, mumh)\n\n\t\tsibs1[,i] <- rowSums(abs(sib1) - 1)\n\t\tsibs2[,i] <- rowSums(abs(sib2) - 1)\n\t\tsibs3[,i] <- rowSums(abs(sib3) - 1)\n\t\tdads[,i] <- dad1 - 1 + abs(dad2) - 1\n\t\tmums[,i] <- mum1 - 1 + abs(mum2) - 1\n\n\t}\n\n    sibs1 <- as_tibble(sibs1)\n    sibs2 <- as_tibble(sibs2)\n    sibs3 <- as_tibble(sibs3)\n    sdat <- bind_rows(\n        tibble(fid = 1:nfam, iid = paste0(1:nfam, \"a\"), sibs1),\n        tibble(fid = 1:nfam, iid = paste0(1:nfam, \"b\"), sibs2),\n        tibble(fid = 1:nfam, iid = paste0(1:nfam, \"b\"), sibs3)\n    )\n    sdat <- sdat %>% group_by(fid) %>%\n        mutate(\n            FG = mean(V1), \n            CG = FG - V1, \n            sex = rbinom(n(), 1, 0.5),\n            phen = rbeta(n(), 1, 5)\n        ) %>% \n        ungroup()\n\n    return(sdat)\n}\n```\n:::\n\n\nExample\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- make_families(0.01, 10000)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The `x` argument of `as_tibble.matrix()` must have unique column names if\n`.name_repair` is omitted as of tibble 2.0.0.\nℹ Using compatibility `.name_repair`.\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(a)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\ntibble [30,000 × 7] (S3: tbl_df/tbl/data.frame)\n $ fid : int [1:30000] 1 2 3 4 5 6 7 8 9 10 ...\n $ iid : chr [1:30000] \"1a\" \"2a\" \"3a\" \"4a\" ...\n $ V1  : num [1:30000] 0 0 0 0 0 0 0 0 0 0 ...\n $ FG  : num [1:30000] 0 0 0 0 0 0 0 0 0 0 ...\n $ CG  : num [1:30000] 0 0 0 0 0 0 0 0 0 0 ...\n $ sex : int [1:30000] 1 0 0 0 1 1 0 0 1 0 ...\n $ phen: num [1:30000] 0.2228 0.0682 0.543 0.0146 0.2571 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(lm(phen ~ FG + CG, a))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = phen ~ FG + CG, data = a)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.17182 -0.10922 -0.03621  0.07345  0.77668 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept) 0.1653896  0.0008179 202.210   <2e-16 ***\nFG          0.0071577  0.0069098   1.036    0.300    \nCG          0.0023271  0.0094268   0.247    0.805    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1394 on 29997 degrees of freedom\nMultiple R-squared:  3.78e-05,\tAdjusted R-squared:  -2.887e-05 \nF-statistic: 0.567 on 2 and 29997 DF,  p-value: 0.5672\n```\n\n\n:::\n:::\n\n\nPerform analysis over a range of rare allele frequencies\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparam <- expand.grid(\n    nsim = 1:20,\n    af = c(seq(0.00005, 0.0005, by=0.00005)),\n    pvalCG = NA,\n    pvalFG = NA\n)\n\nres <- lapply(1:nrow(param), \\(i) {\n    a <- make_families(param$af[i], 10000)\n\n    tryCatch({\n        res <- summary(lm(phen ~ CG + FG + sex, a))\n        p <- param[i, ]\n        p$pvalCG <- res$coef[2,4]\n        p$pvalFG <- res$coef[3,4]\n    }, error = function(e) {\n        return(NULL)\n    })\n    return(p)\n}) %>% bind_rows()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(res, aes(x=af, y=pvalFG)) +\ngeom_point() +\ngeom_smooth() +\nscale_x_log10()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 6 rows containing non-finite values (`stat_smooth()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 6 rows containing missing values (`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(res, aes(x=af, y=pvalCG)) +\ngeom_point() +\ngeom_smooth() +\nscale_x_log10()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n## Summary\n\nNo obvious deflation of test statistics\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.3.2 (2023-10-31)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.6\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] ggplot2_3.4.2 tidyr_1.3.0   dplyr_1.1.4  \n\nloaded via a namespace (and not attached):\n [1] Matrix_1.6-1.1    gtable_0.3.3      jsonlite_1.8.7    compiler_4.3.2   \n [5] tidyselect_1.2.0  splines_4.3.2     scales_1.2.1      yaml_2.3.7       \n [9] fastmap_1.1.1     lattice_0.21-9    R6_2.5.1          labeling_0.4.2   \n[13] generics_0.1.3    knitr_1.45        htmlwidgets_1.6.3 tibble_3.2.1     \n[17] munsell_0.5.0     pillar_1.9.0      rlang_1.1.2       utf8_1.2.4       \n[21] xfun_0.41         cli_3.6.1         withr_2.5.2       magrittr_2.0.3   \n[25] mgcv_1.9-0        digest_0.6.33     grid_4.3.2        lifecycle_1.0.4  \n[29] nlme_3.1-163      vctrs_0.6.4       evaluate_0.23     glue_1.6.2       \n[33] farver_2.1.1      fansi_1.0.5       colorspace_2.1-0  rmarkdown_2.25   \n[37] purrr_1.0.2       tools_4.3.2       pkgconfig_2.0.3   htmltools_0.5.7  \n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}