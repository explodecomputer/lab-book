{
  "hash": "3d06ee776d24f2c9cb6925342ba8b4ed",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Converting z to beta\"\nauthor: Gibran Hemani\ndate: \"2024-06-25\"\ncategories: []\n---\n\n\n## Background\n\nSummary imputation returns Z scores, need to convert back to beta and se. Approach\n\n1. $se(\\beta) = var(y) / \\sqrt{2p(1-p)n}$\n2. \\beta = z * se(\\beta)\n\nAssumes no inbreeding or HW disequilibrium and constant N across SNPs. Assumes collapsability of effects, which is probably ok for small effects in logistic regression studies.\n\nInstead of trying to estimate $var(y)$ we could just use known betas to obtain a correction factor for imputed values e.g.\n\n1. Fit a linear model of known betas on imputed betas\n2. Divide imputed betas by coefficient from (1)\n\n## Continuous trait example\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ieugwasr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nOpenGWAS updates:\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  Date: 2024-05-17\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  [>] OpenGWAS is growing!\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  [>] Please take 2 minutes to give us feedback -\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  [>] It will help directly shape our emerging roadmap\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n  [>] https://forms.office.com/e/eSr7EFAfCG\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\n# Setup data to have Z scores and some known betas\nsetup_data <- function(a) {\n    a$z <- a$beta / a$se\n    a$beta_known <- NA\n    a$se_known <- NA\n    index <- sample(1:nrow(a), nrow(a)*0.05)\n    a$beta_known[index] <- a$beta[index]\n    a$se_known[index] <- a$se[index]\n    return(a)\n}\n\n# Function to convert Z to beta\nmake_beta <- function(dat) {\n    dat$senew <- 1 / sqrt(2 * dat$eaf * (1 - dat$eaf) * dat$n)\n    dat$betanew <- dat$z * dat$senew\n    correction <- lm(dat$betanew ~ dat$beta_known)$coef[2]\n    dat$betanew <- dat$betanew / correction\n    dat$senew <- dat$senew / correction\n    return(dat)\n}\n```\n:::\n\n\nGet LDL cholesterol region as an example\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- associations(\"1:11000000-12000000\", \"ieu-a-300\") %>% setup_data()\na <- make_beta(a)\n\ncor(a$beta, a$betanew, use=\"pair\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9751509\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(lm(a$beta ~ a$betanew))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = a$beta ~ a$betanew)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.044206 -0.000829  0.000218  0.000906  0.014450 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -4.456e-04  9.237e-05  -4.824  1.7e-06 ***\na$betanew    8.591e-01  7.047e-03 121.903  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.002518 on 767 degrees of freedom\n  (65 observations deleted due to missingness)\nMultiple R-squared:  0.9509,\tAdjusted R-squared:  0.9509 \nF-statistic: 1.486e+04 on 1 and 767 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(a$beta, a$betanew)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(a$se, a$senew)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Case control study example\n\nUse CHD\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb <- associations(\"1:11000000-12000000\", \"ieu-a-7\") %>% setup_data()\nb <- make_beta(b)\n\ncor(b$beta, b$betanew, use=\"pair\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.9868891\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(lm(b$beta ~ b$betanew))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = b$beta ~ b$betanew)\n\nResiduals:\n      Min        1Q    Median        3Q       Max \n-0.035710 -0.001275  0.000141  0.001254  0.040604 \n\nCoefficients:\n              Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -1.644e-04  6.768e-05  -2.428   0.0152 *  \nb$betanew    1.049e+00  3.073e-03 341.322   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.003779 on 3116 degrees of freedom\nMultiple R-squared:  0.974,\tAdjusted R-squared:  0.9739 \nF-statistic: 1.165e+05 on 1 and 3116 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(b$beta, b$betanew)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(b$se, b$senew)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n## Deviation from expectation?\n\nSome deviation - most likely due to different sample sizes across SNPs. Can check that the deviation doesn't track with allele frequency\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb$maf <- b$eaf\nb$maf[b$maf > 0.5] <- 1 - b$maf[b$maf > 0.5]\nggplot(b, aes(x=beta, y=betanew)) + geom_point(aes(colour=maf)) + geom_smooth(method=\"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(b, aes(x=se, y=senew)) + geom_point(aes(colour=maf)) + geom_smooth(method=\"lm\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.0 (2024-04-24)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Ventura 13.6\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4    ggplot2_3.5.1  ieugwasr_1.0.0\n\nloaded via a namespace (and not attached):\n [1] Matrix_1.7-0      gtable_0.3.5      jsonlite_1.8.8    compiler_4.4.0   \n [5] tidyselect_1.2.1  splines_4.4.0     scales_1.3.0      yaml_2.3.8       \n [9] fastmap_1.2.0     lattice_0.22-6    R6_2.5.1          labeling_0.4.3   \n[13] generics_0.1.3    curl_5.2.1        knitr_1.47        htmlwidgets_1.6.4\n[17] tibble_3.2.1      munsell_0.5.1     pillar_1.9.0      rlang_1.1.3      \n[21] utf8_1.2.4        xfun_0.44         cli_3.6.2         withr_3.0.0      \n[25] magrittr_2.0.3    mgcv_1.9-1        digest_0.6.35     grid_4.4.0       \n[29] lifecycle_1.0.4   nlme_3.1-164      vctrs_0.6.5       evaluate_0.23    \n[33] glue_1.7.0        farver_2.1.2      fansi_1.0.6       colorspace_2.1-0 \n[37] rmarkdown_2.27    httr_1.4.7        tools_4.4.0       pkgconfig_2.0.3  \n[41] htmltools_0.5.8.1\n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}