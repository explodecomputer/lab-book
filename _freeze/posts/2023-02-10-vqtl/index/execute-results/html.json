{
  "hash": "71b45a88df0913ba64c30c2328d30cb0",
  "result": {
    "markdown": "---\ntitle: \"Sandwich variance estimators to control LD leakage\"\nauthor: Gibran Hemani\ndate: \"2023-02-10\"\ncategories: []\n---\n\n\n## Background\n\nSee https://explodecomputer.github.io/lab-book/posts/2022-12-16-vqtl/ for inflation issues with vQTLs.\n\nCan sandwich estimators help https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5943197/\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(sandwich)\nset.seed(12345)\n\ntest_drm <- function(g, y, sandwich)\n{\n  nom <- c(b=\"Estimate\", se=\"Std. Error\", tval=\"t value\", pval=\"Pr(>|t|)\")\n  y.i <- tapply(y, g, median, na.rm=T)\n  z.ij <- abs(y - y.i[g+1])\n  a <- lm(z.ij ~ g)\n  m1 <- a %>%\n    summary %>%\n    coef %>%\n    as_tibble() %>%\n    # rename(all_of(nom)) %>%\n    slice(2) %>%\n    mutate(method=\"drm\")\n  if(sandwich)\n  {\n    o <- sandwich::vcovHC(a, type=\"HC\")\n    m2 <- m1\n    m2$`Std. Error` <- sqrt(o[2,2])\n    m2$`t value` <- m2$Estimate / m2$`Std. Error`\n    m2$`Pr(>|t|)` <- pnorm(m2$`t value`, lower.tail=TRUE)\n    m2$method <- \"drm sandwich\"\n    return(m2)\n  }\n  return(m1)\n}\n\ncorrelated_binomial <- function (nid, p1, p2, rho, n = 2, round = TRUE, print = FALSE) \n{\n    p <- p1\n    q <- p2\n    a <- function(rho, p, q) {\n        rho * sqrt(p * q * (1 - p) * (1 - q)) + (1 - p) * (1 - q)\n    }\n    a.0 <- a(rho, p, q)\n    prob <- c(`(0,0)` = a.0, `(1,0)` = 1 - q - a.0, `(0,1)` = 1 - \n        p - a.0, `(1,1)` = a.0 + p + q - 1)\n    if (min(prob) < 0) {\n        print(prob)\n        stop(\"Error: a probability is negative.\")\n    }\n    n.sim <- nid\n    u <- sample.int(4, n.sim * n, replace = TRUE, prob = prob)\n    y <- floor((u - 1)/2)\n    x <- 1 - u%%2\n    x <- colSums(matrix(x, nrow = n))\n    y <- colSums(matrix(y, nrow = n))\n    if (round) {\n        x <- round(x)\n        y <- round(y)\n    }\n    if (print) {\n        print(table(x, y))\n        print(stats::cor(x, y))\n    }\n    return(cbind(x, y))\n}\n\ngendatp <- function(n, p1, p2, p3, r1)\n{\n\tdat <- correlated_binomial(n, p1, p2, r1) %>% as_tibble()\n\tnames(dat) <- c(\"y1\", \"y2\")\n\tdat$y3 <- rbinom(n, 1, p3)\n\treturn(dat)\n}\n\nrun_simp <- function(param, i)\n{\n\tset.seed(i*10)\n\tdat <- gendatp(param$n[i], param$p1[i], param$p2[i], param$p3[i], param$r1[i])\n\tx <- dat$y1 + rnorm(nrow(dat), sd=sd(dat$y1)/4)\n\tmod1 <- lm(x ~ y2 + y3, dat)\n\tmod2 <- lm(x ~ y2 + y3 + y2*y3, dat)\n\tamod <- anova(mod1, mod2)\n\tparam$F[i] <- amod$P[2]\n\to1 <- test_drm(dat$y1, x, param$sandwich[i])\n\to2 <- test_drm(dat$y2, x, param$sandwich[i])\n\to3 <- test_drm(dat$y3, x, param$sandwich[i])\n\tparam$drm1[i] <- o1$`Pr(>|t|)`\n\tparam$drm2[i] <- o2$`Pr(>|t|)`\n\tparam$drm3[i] <- o3$`Pr(>|t|)`\n\treturn(param[i,])\n}\n\nparam <- expand.grid(\n    sandwich=c(T,F),\n\tp1=0.1,\n\tp2=0.1,\n\tp3=0.5,\n\tp4=0.1,\n\tn=1000,\n\tr1=seq(0, 1, by=0.2),\n\tsim=1:250,\n\tr2=NA,\n\tF=NA,\n\tdrm1=NA,\n\tdrm2=NA,\n\tdrm3=NA\n)\n\nresp <- lapply(1:nrow(param), function(x) run_simp(param, x)) %>% bind_rows()\nstr(resp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t3000 obs. of  13 variables:\n $ sandwich: logi  TRUE FALSE TRUE FALSE TRUE FALSE ...\n $ p1      : num  0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 ...\n $ p2      : num  0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 ...\n $ p3      : num  0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 ...\n $ p4      : num  0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 ...\n $ n       : num  1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 ...\n $ r1      : num  0 0 0.2 0.2 0.4 0.4 0.6 0.6 0.8 0.8 ...\n $ sim     : int  1 1 1 1 1 1 1 1 1 1 ...\n $ r2      : logi  NA NA NA NA NA NA ...\n $ F       : num  0.4136 0.4151 0.0649 0.1828 0.3566 ...\n $ drm1    : num  0.8477 0.376 0.9038 0.0149 0.3456 ...\n $ drm2    : num  0.988716 0.12422 1 0.000167 1 ...\n $ drm3    : num  0.45884 0.14746 0.00898 0.5823 0.18002 ...\n - attr(*, \"out.attrs\")=List of 2\n  ..$ dim     : Named int [1:13] 2 1 1 1 1 1 6 250 1 1 ...\n  .. ..- attr(*, \"names\")= chr [1:13] \"sandwich\" \"p1\" \"p2\" \"p3\" ...\n  ..$ dimnames:List of 13\n  .. ..$ sandwich: chr [1:2] \"sandwich=TRUE\" \"sandwich=FALSE\"\n  .. ..$ p1      : chr \"p1=0.1\"\n  .. ..$ p2      : chr \"p2=0.1\"\n  .. ..$ p3      : chr \"p3=0.5\"\n  .. ..$ p4      : chr \"p4=0.1\"\n  .. ..$ n       : chr \"n=1000\"\n  .. ..$ r1      : chr [1:6] \"r1=0.0\" \"r1=0.2\" \"r1=0.4\" \"r1=0.6\" ...\n  .. ..$ sim     : chr [1:250] \"sim=  1\" \"sim=  2\" \"sim=  3\" \"sim=  4\" ...\n  .. ..$ r2      : chr \"r2=NA\"\n  .. ..$ F       : chr \"F=NA\"\n  .. ..$ drm1    : chr \"drm1=NA\"\n  .. ..$ drm2    : chr \"drm2=NA\"\n  .. ..$ drm3    : chr \"drm3=NA\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(resp, aes(x=r1, y=-log10(drm2))) +\ngeom_boxplot(aes(fill=as.factor(r1))) +\nscale_fill_brewer(type=\"seq\") +\nlabs(y=\"DRM -log10 p\", x=\"LD between tagging\\nvariant and causal variant\", fill=\"\") +\nfacet_grid(. ~ sandwich)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\nPower\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrun_simp2 <- function(param, i)\n{\n\tset.seed(i*10)\n\tdat <- gendatp(param$n[i], param$p1[i], param$p2[i], param$p3[i], param$r1[i])\n\tx <- dat$y1 + dat$y2 * dat$y3 * param$b[i] + rnorm(nrow(dat), sd=sd(dat$y1)/4)\n\tmod1 <- lm(x ~ y2 + y3, dat)\n\tmod2 <- lm(x ~ y2 + y3 + y2*y3, dat)\n\tamod <- anova(mod1, mod2)\n\tparam$F[i] <- amod$P[2]\n\to1 <- test_drm(dat$y1, x, param$sandwich[i])\n\to2 <- test_drm(dat$y2, x, param$sandwich[i])\n\to3 <- test_drm(dat$y3, x, param$sandwich[i])\n\tparam$drm1[i] <- o1$`Pr(>|t|)`\n\tparam$drm2[i] <- o2$`Pr(>|t|)`\n\tparam$drm3[i] <- o3$`Pr(>|t|)`\n\treturn(param[i,])\n}\n\nparam <- expand.grid(\n    sandwich=c(T,F),\n    b=c(0, 0.1, 1),\n\tp1=0.1,\n\tp2=0.1,\n\tp3=0.5,\n\tp4=0.1,\n\tn=1000,\n\tr1=seq(0, 1, by=0.2),\n\tsim=1:250,\n\tr2=NA,\n\tF=NA,\n\tdrm1=NA,\n\tdrm2=NA,\n\tdrm3=NA\n)\n\nresp2 <- lapply(1:nrow(param), function(x) run_simp2(param, x)) %>% bind_rows()\nstr(resp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t3000 obs. of  13 variables:\n $ sandwich: logi  TRUE FALSE TRUE FALSE TRUE FALSE ...\n $ p1      : num  0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 ...\n $ p2      : num  0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 ...\n $ p3      : num  0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 0.5 ...\n $ p4      : num  0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 0.1 ...\n $ n       : num  1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 ...\n $ r1      : num  0 0 0.2 0.2 0.4 0.4 0.6 0.6 0.8 0.8 ...\n $ sim     : int  1 1 1 1 1 1 1 1 1 1 ...\n $ r2      : logi  NA NA NA NA NA NA ...\n $ F       : num  0.4136 0.4151 0.0649 0.1828 0.3566 ...\n $ drm1    : num  0.8477 0.376 0.9038 0.0149 0.3456 ...\n $ drm2    : num  0.988716 0.12422 1 0.000167 1 ...\n $ drm3    : num  0.45884 0.14746 0.00898 0.5823 0.18002 ...\n - attr(*, \"out.attrs\")=List of 2\n  ..$ dim     : Named int [1:13] 2 1 1 1 1 1 6 250 1 1 ...\n  .. ..- attr(*, \"names\")= chr [1:13] \"sandwich\" \"p1\" \"p2\" \"p3\" ...\n  ..$ dimnames:List of 13\n  .. ..$ sandwich: chr [1:2] \"sandwich=TRUE\" \"sandwich=FALSE\"\n  .. ..$ p1      : chr \"p1=0.1\"\n  .. ..$ p2      : chr \"p2=0.1\"\n  .. ..$ p3      : chr \"p3=0.5\"\n  .. ..$ p4      : chr \"p4=0.1\"\n  .. ..$ n       : chr \"n=1000\"\n  .. ..$ r1      : chr [1:6] \"r1=0.0\" \"r1=0.2\" \"r1=0.4\" \"r1=0.6\" ...\n  .. ..$ sim     : chr [1:250] \"sim=  1\" \"sim=  2\" \"sim=  3\" \"sim=  4\" ...\n  .. ..$ r2      : chr \"r2=NA\"\n  .. ..$ F       : chr \"F=NA\"\n  .. ..$ drm1    : chr \"drm1=NA\"\n  .. ..$ drm2    : chr \"drm2=NA\"\n  .. ..$ drm3    : chr \"drm3=NA\"\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(resp2, aes(x=r1, y=-log10(drm2))) +\ngeom_boxplot(aes(fill=as.factor(r1))) +\nscale_fill_brewer(type=\"seq\") +\nlabs(y=\"DRM -log10 p\", x=\"LD between tagging\\nvariant and causal variant\", fill=\"\") +\nfacet_grid(b ~ sandwich)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 2 rows containing non-finite values (`stat_boxplot()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.1 Patched (2022-09-06 r82817)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Monterey 12.6.2\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] sandwich_3.0-2 ggplot2_3.4.0  dplyr_1.0.10  \n\nloaded via a namespace (and not attached):\n [1] RColorBrewer_1.1-3 pillar_1.8.1       compiler_4.2.1     tools_4.2.1       \n [5] digest_0.6.31      jsonlite_1.8.4     evaluate_0.19      lifecycle_1.0.3   \n [9] tibble_3.1.8       gtable_0.3.1       lattice_0.20-45    pkgconfig_2.0.3   \n[13] rlang_1.0.6        DBI_1.1.3          cli_3.5.0          yaml_2.3.6        \n[17] xfun_0.36          fastmap_1.1.0      withr_2.5.0        stringr_1.5.0     \n[21] knitr_1.41         generics_0.1.3     vctrs_0.5.1        htmlwidgets_1.5.4 \n[25] grid_4.2.1         tidyselect_1.2.0   glue_1.6.2         R6_2.5.1          \n[29] fansi_1.0.3        rmarkdown_2.16     farver_2.1.1       magrittr_2.0.3    \n[33] scales_1.2.1       htmltools_0.5.4    assertthat_0.2.1   colorspace_2.0-3  \n[37] labeling_0.4.2     utf8_1.2.2         stringi_1.7.8      munsell_0.5.0     \n[41] zoo_1.8-11        \n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}