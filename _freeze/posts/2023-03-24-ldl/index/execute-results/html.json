{
  "hash": "1fc035e49873e66be5b83b2b5d7c0e1a",
  "result": {
    "markdown": "---\ntitle: \"LDL and drug adjustment\"\nauthor: Gibran Hemani\ndate: \"2023-03-24\"\ncategories: []\n---\n\n\n## Background\n\n-   People with high LDL cholesterol tend to take medication that lowers their observed LDL\n-   How does this affect genetic associations?\n\nGet a rough distribution of LDL cholesterol (e.g. like this)\n\n![](https://www.researchgate.net/publication/358644627/figure/fig3/AS:1124416071188480@1645093090168/Distribution-of-LDL-cholesterol-measurements-in-VRONI-Distribution-of-LDL-cholesterol.png)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nhist(rnorm(10000, 85, sd=20), breaks=100)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nGenerate genetic effect for LDL cholesterol with effect `b_gy`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 100000\ng <- rnorm(n)\nmean_ldl <- 85\nsd_ldl <- 20\nb_gy <- 10\ny <- mean_ldl + g * b_gy + rnorm(n, sd=sqrt(sd_ldl^2 - b_gy^2))\nhist(y, breaks=100)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nPeople with high LDL cholesterol more likely to take medication - make an adjusted LDL cholesterol measure which has a reduced value amongst people taking medications\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 100000\ng <- rnorm(n)\nmean_ldl <- 130\nsd_ldl <- 20\nb_gy <- 1\nmed_effect <- 0.8\n\ny <- mean_ldl + g * b_gy + rnorm(n, sd=sqrt(sd_ldl^2-b_gy^2))\nmed <- rbinom(n, 1, plogis(scale(y)))\ny_obs <- y\ny_obs[as.logical(med)] <- y_obs[as.logical(med)] * med_effect\n\nrbind(\n  summary(lm(y ~ g))$coef[2,],\n  summary(lm(y_obs ~ g))$coef[2,]\n) %>% as_tibble() %>% mutate(measure=c(\"y\", \"y_obs\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 5\n  Estimate `Std. Error` `t value` `Pr(>|t|)` measure\n     <dbl>        <dbl>     <dbl>      <dbl> <chr>  \n1    0.909       0.0632      14.4   7.62e-47 y      \n2    0.569       0.0552      10.3   6.46e-25 y_obs  \n```\n:::\n:::\n\n\nWhat happens if you put in an approximate adjustment of y_obs. e.g. the effect of the drug is relative (20% reduction), we could erroneously add an absolute value onto med users to try to adjust\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 100000\ng <- rnorm(n)\nmean_ldl <- 130\nsd_ldl <- 20\nb_gy <- 1\nmed_effect <- 0.8\n\ny <- mean_ldl + g * b_gy + rnorm(n, sd=sqrt(sd_ldl^2-b_gy^2))\nmed <- rbinom(n, 1, plogis(scale(y)))\ny_obs <- y\ny_obs[as.logical(med)] <- y_obs[as.logical(med)] * med_effect\n\ny_adj_true <- y_obs\ny_adj_true[as.logical(med)] <- y_obs[as.logical(med)] / med_effect\n\ny_adj_approx <- y_obs\ny_adj_approx[as.logical(med)] <- y_obs[as.logical(med)] + 20\n\nrbind(\n  summary(lm(y ~ g))$coef[2,],\n  summary(lm(y_obs ~ g))$coef[2,],\n  summary(lm(y_adj_true ~ g))$coef[2,],\n  summary(lm(y_adj_approx ~ g))$coef[2,]\n) %>% as_tibble() %>% mutate(measure=c(\"y\", \"y_obs\", \"y_adj_true\", \"y_adj_approx\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  Estimate `Std. Error` `t value` `Pr(>|t|)` measure     \n     <dbl>        <dbl>     <dbl>      <dbl> <chr>       \n1    0.936       0.0631      14.8   1.07e-49 y           \n2    0.602       0.0547      11.0   3.95e-28 y_obs       \n3    0.936       0.0631      14.8   1.07e-49 y_adj_true  \n4    0.789       0.0538      14.7   1.41e-48 y_adj_approx\n```\n:::\n:::\n\n\nDoes collider bias have an impact? Statins are administered due to having a cardio event or being high risk e.g. due to family history. So there could be other non-LDL genetic factors that influence medication usage, and selecting or adjusting for medication usage could induce a collider that associates non-LDL genotypes with the adjusted LDL phenotype. e.g. simulate a large non-LDL factor that influences medication for illustration\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 1000000\ng <- rnorm(n)\ng_other <- rnorm(n)\nmean_ldl <- 130\nsd_ldl <- 20\nb_gy <- 1\nb_omed <- 1\nmed_effect <- 0.8\n\ny <- mean_ldl + g * b_gy + rnorm(n, sd=sqrt(sd_ldl^2-b_gy^2))\nmed <- rbinom(n, 1, plogis(scale(y) + g_other * b_omed))\ny_obs <- y\ny_obs[as.logical(med)] <- y_obs[as.logical(med)] * med_effect\n\ny_adj_true <- y_obs\ny_adj_true[as.logical(med)] <- y_obs[as.logical(med)] / med_effect\n\ny_adj_approx <- y_obs\ny_adj_approx[as.logical(med)] <- y_obs[as.logical(med)] + 20\n```\n:::\n\n\nResult for LDL genotype\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrbind(\n  summary(lm(y ~ g))$coef[2,],\n  summary(lm(y_obs ~ g))$coef[2,],\n  summary(lm(y_adj_true ~ g))$coef[2,],\n  summary(lm(y_adj_approx ~ g))$coef[2,]\n) %>% as_tibble() %>% mutate(measure=c(\"y\", \"y_obs\", \"y_adj_true\", \"y_adj_approx\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  Estimate `Std. Error` `t value` `Pr(>|t|)` measure     \n     <dbl>        <dbl>     <dbl>      <dbl> <chr>       \n1    1.03        0.0200      51.5  0         y           \n2    0.680       0.0181      37.6  5.73e-309 y_obs       \n3    1.03        0.0200      51.5  0         y_adj_true  \n4    0.871       0.0172      50.5  0         y_adj_approx\n```\n:::\n:::\n\n\nResult for non-LDL genotype\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrbind(\n  summary(lm(y ~ g_other))$coef[2,],\n  summary(lm(y_obs ~ g_other))$coef[2,],\n  summary(lm(y_adj_true ~ g_other))$coef[2,],\n  summary(lm(y_adj_approx ~ g_other))$coef[2,]\n) %>% as_tibble() %>% mutate(measure=c(\"y\", \"y_obs\", \"y_adj_true\", \"y_adj_approx\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 5\n  Estimate `Std. Error` `t value` `Pr(>|t|)` measure     \n     <dbl>        <dbl>     <dbl>      <dbl> <chr>       \n1  -0.0168       0.0200    -0.841      0.401 y           \n2  -4.72         0.0175  -270.         0     y_obs       \n3  -0.0168       0.0200    -0.841      0.401 y_adj_true  \n4  -1.10         0.0172   -63.8        0     y_adj_approx\n```\n:::\n:::\n\n\n\n### Summary\n\n-   A relative reduction in observed LDL measures due to medication will lead to attenuated genetic effect estimates\n-   Adjustment to correct LDL values amongst medication users potentially resolves the issue\n-   Even an inaccurate adjustment can improve the estimate\n-   Collider bias induces a negative association between unadjusted LDL and non-LDL genetic factors, but not a great deal of issue at the LDL locus\n-   Perfect adjustment of medication would resolve this problem\n-   Imperfect adjustment partially avoids the issue but some bias remains at the non-LDL genetic factor\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nR version 4.2.3 Patched (2023-03-15 r84020)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Monterey 12.6.2\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.2-arm64/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_GB.UTF-8/en_GB.UTF-8/en_GB.UTF-8/C/en_GB.UTF-8/en_GB.UTF-8\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.0.10\n\nloaded via a namespace (and not attached):\n [1] knitr_1.41        magrittr_2.0.3    tidyselect_1.2.0  R6_2.5.1         \n [5] rlang_1.0.6       fastmap_1.1.0     fansi_1.0.3       stringr_1.5.0    \n [9] tools_4.2.3       xfun_0.36         utf8_1.2.2        cli_3.5.0        \n[13] DBI_1.1.3         htmltools_0.5.4   assertthat_0.2.1  yaml_2.3.6       \n[17] digest_0.6.31     tibble_3.1.8      lifecycle_1.0.3   htmlwidgets_1.5.4\n[21] vctrs_0.5.1       glue_1.6.2        evaluate_0.19     rmarkdown_2.16   \n[25] stringi_1.7.8     compiler_4.2.3    pillar_1.8.1      generics_0.1.3   \n[29] jsonlite_1.8.4    pkgconfig_2.0.3  \n```\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}