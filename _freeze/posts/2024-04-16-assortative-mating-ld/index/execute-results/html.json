{
  "hash": "07dfaab373be30c51d203e11d72fc8ca",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"LD induced by assortative mating\"\nauthor: Gibran Hemani\ndate: \"2024-04-16\"\ncategories: []\n---\n\n\n## Background\n\nPositive LD is predicted by assortative mating? https://www.youtube.com/watch?v=6m-mLvNQxJA\n\nAssortative mating induces a form of selection bias in that of all possible mating pairs, the observed pairs are not a random sample, they are those that are more similar to each other than would be expected by chance. And therefore the children of those pairs inherit alleles that have not been randomly sampled.\n\nThough this is not a straightforward form of selection where e.g. a higher phenotypic value leads to more chance of inclusion in the population, in which case you would expect negative correlation amongst the SNPs influencing the trait. \n\nSimulate families with assortative mating and calculate LD between SNPs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nmake_families <- function(af, nfam) {\n\tnsnp <- length(af)\n\tdads <- matrix(0, nfam, nsnp)\n\tmums <- matrix(0, nfam, nsnp)\n\tsibs1 <- matrix(0, nfam, nsnp)\n\tsibs2 <- matrix(0, nfam, nsnp)\n\tibd <- matrix(0, nfam, nsnp)\n\tibs <- matrix(0, nfam, nsnp)\n\tfor(i in 1:nsnp)\n\t{\n\t\tdad1 <- rbinom(nfam, 1, af[i]) + 1\n\t\tdad2 <- (rbinom(nfam, 1, af[i]) + 1) * -1\n\t\tmum1 <- rbinom(nfam, 1, af[i]) + 1\n\t\tmum2 <- (rbinom(nfam, 1, af[i]) + 1) * -1\n\n\t\tdadindex <- sample(c(TRUE, FALSE), nfam, replace=TRUE)\n\t\tdadh <- rep(NA, nfam)\n\t\tdadh[dadindex] <- dad1[dadindex]\n\t\tdadh[!dadindex] <- dad2[!dadindex]\n\n\t\tmumindex <- sample(c(TRUE, FALSE), nfam, replace=TRUE)\n\t\tmumh <- rep(NA, nfam)\n\t\tmumh[mumindex] <- mum1[mumindex]\n\t\tmumh[!mumindex] <- mum2[!mumindex]\n\n\t\tsib1 <- cbind(dadh, mumh)\n\n\t\tdadindex <- sample(c(TRUE, FALSE), nfam, replace=TRUE)\n\t\tdadh <- rep(NA, nfam)\n\t\tdadh[dadindex] <- dad1[dadindex]\n\t\tdadh[!dadindex] <- dad2[!dadindex]\n\n\t\tmumindex <- sample(c(TRUE, FALSE), nfam, replace=TRUE)\n\t\tmumh <- rep(NA, nfam)\n\t\tmumh[mumindex] <- mum1[mumindex]\n\t\tmumh[!mumindex] <- mum2[!mumindex]\n\n\t\tsib2 <- cbind(dadh, mumh)\n\n\n\t\tsibs1[,i] <- rowSums(abs(sib1) - 1)\n\t\tsibs2[,i] <- rowSums(abs(sib2) - 1)\n\t\tdads[,i] <- dad1 - 1 + abs(dad2) - 1\n\t\tmums[,i] <- mum1 - 1 + abs(mum2) - 1\n\n\t}\n\treturn(list(dads=dads, mums=mums, sibs1=sibs1, sibs2=sibs2))\n}\n\nmakePhen <- function(effs, indep, vy=1, vx=rep(1, length(effs)), my=0) {\n\tif(is.null(dim(indep))) indep <- cbind(indep)\n\tstopifnot(ncol(indep) == length(effs))\n\tstopifnot(length(vx) == length(effs))\n\tcors <- effs * vx / sqrt(vx) / sqrt(vy)\n\tstopifnot(sum(cors^2) <= 1)\n\tcors <- c(cors, sqrt(1-sum(cors^2)))\n\tindep <- t(t(scale(cbind(indep, rnorm(nrow(indep))))) * cors * c(vx, 1))\n\ty <- drop(scale(rowSums(indep)) * sqrt(vy)) + my\n\treturn(y)\n}\n\nmake_phenotypes <- function(fam, eff_gx, vx, mx) {\n\tlapply(fam, function(g)\n\t{\n\t\tx <- makePhen(c(eff_gx), cbind(g), vy=vx, my=mx)\n\t\treturn(data.frame(x=x))\n\t})\n}\n```\n:::\n\n\nGenerate 100000 families with 3 SNPs each with MAF 0.5\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- make_families(c(0.5, 0.5, 0.5), 100000)\n```\n:::\n\n\nGenerate phenotypes where those three SNPs explain most of the variance\n\n\n::: {.cell}\n\n```{.r .cell-code}\nb <- make_phenotypes(a, sqrt(c(0.3, 0.3, 0.3)), 1, 0)\nstr(b)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 4\n $ dads :'data.frame':\t100000 obs. of  1 variable:\n  ..$ x: num [1:100000] 0.0211 -1.2521 -0.9917 0.1754 -0.9217 ...\n  .. ..- attr(*, \"scaled:center\")= num -6.26e-17\n  .. ..- attr(*, \"scaled:scale\")= num 1\n $ mums :'data.frame':\t100000 obs. of  1 variable:\n  ..$ x: num [1:100000] 0.174 0.899 1.341 -0.173 -0.135 ...\n  .. ..- attr(*, \"scaled:center\")= num 4.89e-17\n  .. ..- attr(*, \"scaled:scale\")= num 1\n $ sibs1:'data.frame':\t100000 obs. of  1 variable:\n  ..$ x: num [1:100000] 0.509 0.192 1.35 -1.571 -0.51 ...\n  .. ..- attr(*, \"scaled:center\")= num -2.44e-17\n  .. ..- attr(*, \"scaled:scale\")= num 1\n $ sibs2:'data.frame':\t100000 obs. of  1 variable:\n  ..$ x: num [1:100000] -0.368 -0.632 0.176 0.416 -0.44 ...\n  .. ..- attr(*, \"scaled:center\")= num -2.02e-17\n  .. ..- attr(*, \"scaled:scale\")= num 0.994\n```\n\n\n:::\n:::\n\n\nSelect spouse pairs with most similar phenotypes\n\n\n::: {.cell}\n\n```{.r .cell-code}\nssd <- (b$dads$x - b$mums$x)^2\nsel <- which(ssd < quantile(ssd, 0.1))\n```\n:::\n\n\nCalculate LD between SNPs\n\n1. Spouse pairs - expect positive correlation\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(a$dads[,1], a$mums[,1])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.002640232\n```\n\n\n:::\n\n```{.r .cell-code}\ncor(a$dads[sel,1], a$mums[sel,1])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.185586\n```\n\n\n:::\n:::\n\n\nPositive correlation observed\n\n2. Within fathers only - expect negative correlation\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(a$dads) %>% round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3]\n[1,]    1    0    0\n[2,]    0    1    0\n[3,]    0    0    1\n```\n\n\n:::\n\n```{.r .cell-code}\ncor(a$dads[sel,]) %>% round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      [,1]  [,2]  [,3]\n[1,]  1.00 -0.19 -0.18\n[2,] -0.19  1.00 -0.19\n[3,] -0.18 -0.19  1.00\n```\n\n\n:::\n:::\n\n\nNegative correlations observed\n\n3. Within siblings - expect positive correlation\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncor(a$sibs1) %>% round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3]\n[1,] 1.00    0 0.01\n[2,] 0.00    1 0.00\n[3,] 0.01    0 1.00\n```\n\n\n:::\n\n```{.r .cell-code}\ncor(a$sibs1[sel,]) %>% round(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      [,1]  [,2] [,3]\n[1,]  1.00 -0.01 0.01\n[2,] -0.01  1.00 0.00\n[3,]  0.01  0.00 1.00\n```\n\n\n:::\n:::\n\n\nNot seeing any correlation\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.3.3 (2024-02-29)\nPlatform: aarch64-apple-darwin20 (64-bit)\nRunning under: macOS Ventura 13.6\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.3-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.11.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] dplyr_1.1.4\n\nloaded via a namespace (and not attached):\n [1] digest_0.6.34     utf8_1.2.4        R6_2.5.1          fastmap_1.1.1    \n [5] tidyselect_1.2.0  xfun_0.42         magrittr_2.0.3    glue_1.7.0       \n [9] tibble_3.2.1      knitr_1.45        pkgconfig_2.0.3   htmltools_0.5.7  \n[13] rmarkdown_2.26    generics_0.1.3    lifecycle_1.0.4   cli_3.6.2        \n[17] fansi_1.0.6       vctrs_0.6.5       compiler_4.3.3    tools_4.3.3      \n[21] pillar_1.9.0      evaluate_0.23     yaml_2.3.8        rlang_1.1.3      \n[25] jsonlite_1.8.8    htmlwidgets_1.6.3\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}