{
  "hash": "c071a9dc0187ecc628019f4944a32730",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"MVMR interpretation with differential power\"\nauthor: Gibran Hemani\ndate: \"2025-08-14\"\ncategories: []\n---\n\n\n## Background\n\nSuppose this is the model:\n\n```\nG1 -> childhood BMI\n         | \n         V\nG2 -> adulthood BMI -> BC\n```\n\nIf the childhood BMI GWAS and the adulthood GWAS are different sample sizes, how does this influence the MVMR performance?\n\n## Simulations\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(simulateGP)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(furrr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: future\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\ndo_mvmr <- function(ss1, ss2, ssout) {\n    snplist <- c(\n        subset(ss1, pval < 5e-8)$snp,\n        subset(ss2, pval < 5e-8)$snp\n    ) %>% unique\n    b1 <- subset(ss1, snp %in% snplist)$bhat\n    b2 <- subset(ss2, snp %in% snplist)$bhat\n    bout <- subset(ssout, snp %in% snplist)$bhat\n    seout <- subset(ssout, snp %in% snplist)$se\n    mod <- summary(lm(bout ~ 0 + b1 + b2, weight=1/seout^2))$coef %>% as_tibble()\n    names(mod) <- c(\"b\", \"se\", \"tval\", \"pval\")\n    mod <- mutate(mod, trait=c(\"1\", \"2\"), ninst = c(sum(ss1$pval < 5e-8), sum(ss2$pval < 5e-8)))\n    return(mod)\n}\n\ngenerate_data <- function(nsnp, h2_1, h2_2, Pi_1, Pi_2, b_12, nid1, nid2, nid3, b_1o, b_2o, rep=NULL, gxe=NULL) {\n    map <- arbitrary_map(runif(nsnp, 0.01, 0.99))\n\n    params1 <- generate_gwas_params(map=map, h2=h2_1, S=-0.1, Pi=Pi_1)\n    params2 <- generate_gwas_params(map=map, h2=h2_2, S=-0.1, Pi=Pi_2)\n    params2$beta <- params2$beta + params1$beta * b_12\n\n    ss1 <- generate_gwas_ss(params1, nid=nid1)\n    ss2 <- generate_gwas_ss(params2, nid=nid2)\n\n    params3 <- params2\n    params3$beta <- params1$beta * b_1o + params2$beta * b_2o\n    ssout <- generate_gwas_ss(params3, nid=300000)\n    return(list(ss1, ss2, ssout))\n}\n```\n:::\n\n\n### Example\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- generate_data(\n    nsnp = 1000000,\n    h2_1 = 0.3,\n    h2_2 = 0.3,\n    Pi_1 = 0.02,\n    Pi_2 = 0.02,\n    b_12 = 0.8,\n    nid1 = 220000,\n    nid2 = 220000,\n    nid3 = 300000,\n    b_1o = 0,\n    b_2o = -0.5\n)\n\nstr(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 3\n $ : tibble [1,000,000 × 11] (S3: tbl_df/tbl/data.frame)\n  ..$ snp : int [1:1000000] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ chr : num [1:1000000] 99 99 99 99 99 99 99 99 99 99 ...\n  ..$ pos : int [1:1000000] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ ea  : chr [1:1000000] \"1\" \"1\" \"1\" \"1\" ...\n  ..$ oa  : chr [1:1000000] \"2\" \"2\" \"2\" \"2\" ...\n  ..$ af  : num [1:1000000] 0.1877 0.2396 0.2316 0.3315 0.0134 ...\n  ..$ se  : num [1:1000000] 0.00386 0.00353 0.00357 0.0032 0.0131 ...\n  ..$ bhat: num [1:1000000] 0.000568 0.005296 0.003813 -0.001046 0.007064 ...\n  ..$ fval: num [1:1000000] 0.0217 2.2481 1.1384 0.1067 0.291 ...\n  ..$ n   : num [1:1000000] 220000 220000 220000 220000 220000 220000 220000 220000 220000 220000 ...\n  ..$ pval: num [1:1000000] 0.883 0.134 0.286 0.744 0.59 ...\n $ : tibble [1,000,000 × 11] (S3: tbl_df/tbl/data.frame)\n  ..$ snp : int [1:1000000] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ chr : num [1:1000000] 99 99 99 99 99 99 99 99 99 99 ...\n  ..$ pos : int [1:1000000] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ ea  : chr [1:1000000] \"1\" \"1\" \"1\" \"1\" ...\n  ..$ oa  : chr [1:1000000] \"2\" \"2\" \"2\" \"2\" ...\n  ..$ af  : num [1:1000000] 0.1877 0.2396 0.2316 0.3315 0.0134 ...\n  ..$ se  : num [1:1000000] 0.00386 0.00353 0.00357 0.0032 0.0131 ...\n  ..$ bhat: num [1:1000000] 0.009026 -0.003853 -0.000869 0.000124 -0.007611 ...\n  ..$ fval: num [1:1000000] 5.4653 1.1899 0.05908 0.00149 0.33779 ...\n  ..$ n   : num [1:1000000] 220000 220000 220000 220000 220000 220000 220000 220000 220000 220000 ...\n  ..$ pval: num [1:1000000] 0.0194 0.2754 0.808 0.9692 0.5611 ...\n $ : tibble [1,000,000 × 11] (S3: tbl_df/tbl/data.frame)\n  ..$ snp : int [1:1000000] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ chr : num [1:1000000] 99 99 99 99 99 99 99 99 99 99 ...\n  ..$ pos : int [1:1000000] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ ea  : chr [1:1000000] \"1\" \"1\" \"1\" \"1\" ...\n  ..$ oa  : chr [1:1000000] \"2\" \"2\" \"2\" \"2\" ...\n  ..$ af  : num [1:1000000] 0.1877 0.2396 0.2316 0.3315 0.0134 ...\n  ..$ se  : num [1:1000000] 0.00331 0.00302 0.00306 0.00274 0.01121 ...\n  ..$ bhat: num [1:1000000] -0.00241 -0.00138 0.00508 0.0033 -0.00622 ...\n  ..$ fval: num [1:1000000] 0.53 0.207 2.75 1.446 0.308 ...\n  ..$ n   : num [1:1000000] 3e+05 3e+05 3e+05 3e+05 3e+05 3e+05 3e+05 3e+05 3e+05 3e+05 ...\n  ..$ pval: num [1:1000000] 0.4664 0.6489 0.0972 0.2292 0.5791 ...\n```\n\n\n:::\n\n```{.r .cell-code}\ndo_mvmr(dat[[1]], dat[[2]], dat[[3]])\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 6\n        b      se   tval      pval trait ninst\n    <dbl>   <dbl>  <dbl>     <dbl> <chr> <int>\n1 -0.0607 0.0111   -5.48 6.91e-  8 1       230\n2 -0.386  0.00904 -42.8  1.65e-168 2       302\n```\n\n\n:::\n:::\n\n\nHere, the power is the same for the two exposures, and we get an appropriate result of exposure 2 having the causal influence.\n\n\n### Analysis\n\nRun simulations with different sample sizes for the exposure 2 (the real causal exposure)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparams <- expand.grid(\n    nsnp = 1000000,\n    h2_1 = 0.3,\n    h2_2 = 0.1,\n    Pi_1 = 0.02,\n    Pi_2 = 0.005,\n    b_12 = 0.9,\n    gxe = 0,\n    nid1 = 220000,\n    nid2 = seq(10000, 220000, by=10000),\n    nid3 = 300000,\n    b_1o = 0,\n    b_2o = -0.5,\n    rep = 1:5\n)\n\nrun_sim <- function(...) {\n    l <- list(...)\n    dat <- do.call(generate_data, l)\n    res <- do_mvmr(dat[[1]], dat[[2]], dat[[3]])\n    res <- bind_cols(res, as_tibble(l))\n}\n\nplan(multicore, workers=6)\n\nres <- future_pmap(params, run_sim, .options=furrr_options(seed=TRUE)) %>% bind_rows()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nres %>% mutate(\n    trait = case_when(trait == 1 ~ \"Pre-puberty body size\", trait == 2 ~ \"Post-puberty body size\")\n) %>%\nggplot(aes(x=nid2, y=b, colour=as.factor(trait))) +\ngeom_point() +\nlabs(x=\"Sample size for post-puberty GWAS\", y=\"MVMR beta\", colour=\"Exposure\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n## Summary\n\nThis is probably well known, but when X2 is causal but has low power, X1 will appear to be the causal factor\n\n---\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsessionInfo()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.5.1 (2025-06-13)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sonoma 14.6.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.5-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.1\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: Europe/London\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n[1] ggplot2_3.5.2    furrr_0.3.1      future_1.49.0    dplyr_1.1.4     \n[5] simulateGP_0.1.3\n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.6       jsonlite_2.0.0     compiler_4.5.1     tidyselect_1.2.1  \n [5] parallel_4.5.1     globals_0.18.0     scales_1.4.0       yaml_2.3.10       \n [9] fastmap_1.2.0      R6_2.6.1           labeling_0.4.3     generics_0.1.4    \n[13] knitr_1.50         htmlwidgets_1.6.4  tibble_3.3.0       pillar_1.11.0     \n[17] RColorBrewer_1.1-3 rlang_1.1.6        utf8_1.2.6         xfun_0.52         \n[21] cli_3.6.5          withr_3.0.2        magrittr_2.0.3     digest_0.6.37     \n[25] grid_4.5.1         lifecycle_1.0.4    vctrs_0.6.5        evaluate_1.0.4    \n[29] glue_1.8.0         farver_2.1.2       listenv_0.9.1      codetools_0.2-20  \n[33] parallelly_1.44.0  rmarkdown_2.29     purrr_1.1.0        tools_4.5.1       \n[37] pkgconfig_2.0.3    htmltools_0.5.8.1 \n```\n\n\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}